                                                        _______________   
 *-----------------------------------------------------------------------------*
 |   Company:     __________           Bank:   _____________________________   |
 |   Description: __________________   Branch: ___________________________     |
 *-----------------------------------------------------------------------------*
 |   Payor Type:[R _~Insured _~Mortgagee _~Billing _~Agent _~Credit _~Other R] |
 *-----------------------------------------------------------------------------*
 |~~~Policy~No.:~~_________~______________________________~~Money~Order:~_~~~~~|
 |~~~Check~No.:~~~____________________~Post~Dated:~_~~Check~Date:~~__________~~|
 |~~~Bank~No:~~~~~_______________~~~~~~Deposit~Date:~__________~~~~~~~~~~~~~~~~|
 |~~~Trans~Date:~~__________~~~Status~:~_____~________________________________~|
 |~~~Amount:~~~~~~___________~~Balance:~___________~Hold~Check:~_ Deposit:~_~~~|
 |~~~Comments:~~~~___________________________________________________________~~|
 *-----------------------------------------------------------*-----------------*
 |                      Payor Information                    |    Total Due    |
 |  Name:       _______________________________________      |    _________    |
 |  Care of:    ______________________________               *-----------------*
 |  Address:    _____________________________                |   Reference     |
 |  City/State: _____________________________ ___ __________ |     _______     |
 *------------------------------------------------*----------*-----------------*
 |~Total~Due~Net:~_________~Installment~Charges:~_________~Surcharge:~_________|
 *-----------------------------------------------------------------------------*


%%
Screen
     Name = "arsmt001" ;
     Type = "Detail" ;
     Padcharacter = Space ;
     Highlight = Underscore ;
     Screensize="dynamic";
     Domain="ARSCHKSU";
     Windowtitle = "%a     %s  Check Processing - Entry - Version 4.15    %m";
     Recordlock = Immediate ;

     Global Unsigned Ascii Number G_CHECK_REFERENCE[7],
                                  G_POLICY_NO[9],
                                  G_QUOTE_NO[8] ,
                                  G_AGENT_NO[4] ;

     Global String G_SUPP_NAME[30],
                   G_CARE_OF[30],
                   G_STREET[20],
                   G_CITY_STATE[20],
                   G_COMPANY[10],
                   G_CHECK_NUMBER[20];

     Global Signed Ascii Number G_TOTAL_DUE[9]/decimals=2,
                                G_CHECK_AMOUNT[9]/decimals=2;

     Global Unsigned Ascii Number G_ZIP_CODE[9] ;

     Include "arsmenu.var"

     Signed Ascii Number L_TOTAL[9]=0/dec=2,
                         L_TOTAL_1[9]=0/dec=2,
                         L_TOTAL_DUE[9]=0/decimals=2,
                         L_BATCH[11]=0/decimals=2 ;

     String L_APPLICATION_STR[30]="Application ";
     String L_ENTER[1];
     String L_SFS_CODE[3]="SFS";

     Wdate L_TRANS_DATE=00.00.0000;
     /* these globals are needed for arsmt01d */
     Global Signed Ascii Number G_TOTAL_DUE_NET[9]/decimals=2,
                                G_INSTALLMENT_AMT[9]/decimals=2,
                                G_TOTAL_PREMIUM[9]/decimals=2,
                                G_TOTAL_SURCHARGE[9]/decimals=2,
                                G_TOTAL_INSTALLMENT_CHARGE[9]/decimals=2;

     Global String G_BANK_NO[15];
     Global Unsigned Ascii Number G_APPLY_INSTALLMENT_CREDIT[1];
     String L_CANCELLATION_EXISTS[1]="N";
     Unsigned Ascii Number L_BUILDING_NO[4]=0;
     Unsigned Ascii Number L_PREM_NO[4]=0;
     Unsigned Ascii Number L_SUB_CODE[4]=0;
     Unsigned Ascii Number L_BUILD_NO[4]=0;
     Unsigned Ascii Number L_HOLD_POLICY_NO[9]=0;
     Unsigned Ascii Number L_HOLD_POL_YEAR[4]=0;
     Unsigned Ascii Number L_HOLD_END_SEQUENCE[4]=0;
     Wdate L_HOLD_CX_EFF_DATE;
     String L_POLICY_CX[1]="N";
     String L_STR_ZIPCODE[9]="";
     String L_UNPOSTED_CHECK[1]="N";
     Unsigned Ascii Number L_PRIOR_POLICY_NO[9]=0;
     Unsigned Ascii Number L_HOLD_BILLING_CTR[2]=0/decimals=0;
     Signed Ascii Number L_TOTAL_OUTSTANDING[9]=0/decimals=2;

     Access ARSCHKSU,
            Set ARSCHKSU:COMPANY_ID      = G_COMPANY,
                ARSCHKSU:CHECK_REFERENCE = G_CHECK_REFERENCE ;

     Include "csexec.var"

     Include "scipsprint.var"

     Include "arskeys.inc"
     !F8="CHECK"/function/icon="Post" ;

Functions

     Include "arsmenu.inc"
     "redisplay" Display/noreturn PROGRAMID;

     "CHECK" Continue
            Begin
                If ARSCHKSU:POLICY_NO <> 0 And
                   ARSCHKSU:DISPOSITION One Of "OPEN","" Then  -- "" is for forcing posting on entry of second check
                   Begin
                   If SFSCOMPANY:DEBUG_MODE = 1 Then
                   Begin
                      Proc ("csbatch arsup010 %n",ARSCHKSU:POLICY_NO)
                   End
                   Else
                   Begin
                      Proc ("csbatch arsup010 %n",ARSCHKSU:POLICY_NO)/noconsole
                   End
                      FUNCTION = "redisplay"
                   End
            End ;
--     Include "stdfunc.inc"
/* STDFUNC.INC */

        Add/security=50   ;            /* Add a record */
        Change/security=80;
        Delete;         /* Delete an existing record */

        Search;         /* Select a record using an approximate key */
        Next;           /* Display the next record(s) in key sequence */
        Previous;       /* Display the previous record(s) in key sequence */

"Back"  Return ;         /* Back to previous screen */
"Exit"  Return ;
        Return ;

"Bye"   Stop;           /* Terminate this session */
        Stop;


     Include "scipsprint.fun"

Screen Entry

L_TRANS_DATE = SYSTEMDATE -- default this on entry
Access SFSDEFAULT, Set SFSDEFAULT:SFS_CODE = L_SFS_CODE
If G_COMPANY <> SFSDEFAULT:COMPANY_ID Then
Begin
    G_COMPANY = SFSDEFAULT:COMPANY_ID
End

Access Validation
     If FUNCTION One Of "CHANGE" And
        ARSCHKSU:DISPOSITION One Of "CLEAR" Then
        Begin
            Error "Can not Change a POSTED Check"
            Abort()
        End

Fields
101     FUNCTION;

301  Begin
     If SECURITY < 65 Then Begin
     Activehelp()
     End
     ARSCHKSU:COMPANY_ID = G_COMPANY
     If FUNCTION = "ADD" Then
         Begin
             Access ARSCONTROL, Set ARSCONTROL:COMPANY_ID = "XXXXXXXXXX", Exact
             ARSCHKSU:COMPANY_ID = ARSCONTROL:DEFAULT_COMPANY
             If G_COMPANY <> "" Then
                 ARSCHKSU:COMPANY_ID = G_COMPANY
             Access ARSCONTROL, Set ARSCONTROL:COMPANY_ID = "", Approximate
             End
     End
     ARSCHKSU:COMPANY_ID/default
--     Begin
--     Error 5004
--     If ARSCHKSU:BALANCE <> ARSCHKSU:CHECK_AMOUNT And
--        FUNCTION = "CHANGE" Or
--        FUNCTION = "DELETE"
--     End
     Begin
         If ARSCHKSU:COMPANY_ID <> "" And
            G_COMPANY = "" Then
            { G_COMPANY = ARSCHKSU:COMPANY_ID }
     End
     Activehelp
               If ARSCONTROL:USE = 1 Then ARSCONTROL:COMPANY_ID  Else NULL,
               If ARSCONTROL:USE = 1 Then ARSCONTROL:BANK_ACCOUNT_NO Else NULL
                 ;
0301 ARSCHKSU:COMPANY_ID/displayonly
     Error "Company ID is Not Valid" If SFSCOMPANY:NAME[1]="";
401  Begin
         G_COMPANY  = ARSCHKSU:COMPANY_ID
     End
     SFSCOMPANY:NAME[1]/displayonly/default/mask="X(18)"   ;
302  ARSCONTROL:BANK_NAME/displayonly
     Error 3001 If ARSCONTROL:BANK_NAME = "";
402  ARSCONTROL:BANK_BRANCH/displayonly ;
601  Begin
     If FUNCTION = "ADD" Then
     Begin
         ARSCHKSU:PAYOR_TYPE = "I"
         ARSCHKSU:USER       = USERNAME
     End
     End
     ARSCHKSU:PAYOR_TYPE/button/values="I,M,B,A,C,O"/default
     Begin
     If FUNCTION = "ADD" Then
     Begin
     If ARSCHKSU:PAYOR_TYPE = "M" Then
     Begin
          Display Modal Screen "arsmt02a"  -- mortgagee paying multiples
          At Line 1, Column 1
          With Initial Function "ADD"
          If G_POLICY_NO <> 0 Then ARSCHKSU:POLICY_NO = G_POLICY_NO
--          Write ("%c%s%n",24001,"g policy no = ",G_POLICY_NO)
     End

     Else If ARSCHKSU:PAYOR_TYPE = "B" Then
          Display Modal Screen "arsmt01a"  --  billing name information
          At Line 1, Column 1
          With Initial Function "ADD"

     Else If ARSCHKSU:PAYOR_TYPE = "A" Then
          Display Modal Screen "arsmt03a"  -- agent paying
          At Line 1, Column 1
          With Initial Function "ADD"

--     Else If ARSCHKSU:PAYOR_TYPE = "C" Then
--          Display Modal Screen "arsmt04a"  -- insured using a credit card
--          At Line 1, Column 1
--          With Initial Function "ADD|RETURN"

     End
     If ARSCHKSU:PAYOR_TYPE <> "I" And
        ARSCHKSU:PAYOR_TYPE <> "O" And
        ARSCHKSU:PAYOR_TYPE <> "C"
         Then Abort () -- take the user back to the function
                       -- no need to complete this screen since
                       -- the information was entered in another
     End
      ;
801  Begin
     If FUNCTION = "ADD" Then
         Begin
         ARSCHKSU:QUOTE_NO = G_QUOTE_NO
         ARSCHKSU:POLICY_NO = 0
         End
     End
     ARSCHKSU:POLICY_NO/default/tabstop;
1602 Begin
     If ARSCHKSU:POLICY_NO <> 0 Then
     Begin
        Do GET_AMOUNT_DUE
        If FUNCTION = "ADD" Then
        Begin
        If ARSCHKSU:POLICY_NO <> 0 Then
        Begin
            ARSCHKSU:TRANS_EFF = SFPNAME:EFF_DATE
            Do CHECK_FOR_CANCELLATION
            Warning 3040 If L_CANCELLATION_EXISTS = "Y"
            If L_POLICY_CX = "Y" Then
            Begin
                 Error 3041
            End
--            If L_TOTAL_DUE = 0 Then -- policy is paid in full
            If L_TOTAL_OUTSTANDING = 0 Then
            Begin
                Warning "Policy is PAID in full.  Press cancel to continue or ABORT to exit entry"
            End
            Do CHECK_FOR_UNPOSTED
            If L_UNPOSTED_CHECK = "Y" Then
            Begin
                Warning "Prior Check for Same Policy Exists.  Please Post Prior Check.  Aborting current entry"
                Warning "Press Cancel to post prior check"
                If Abort Not One Of "YES" Then
                Begin
                      Proc ("csbatch arsup010 %n",L_PRIOR_POLICY_NO)/noconsole
--   FUNCTION = "redisplay"
                End
                Else
                Begin
                    Abort()
                End
            End
        End
        End
     End
     End
     L_TOTAL_DUE/displayonly
     If L_POLICY_CX = "Y" Then
     { Abort () };
2101 G_TOTAL_DUE_NET/displayonly;
2102 G_TOTAL_INSTALLMENT_CHARGE/displayonly;
2103 G_TOTAL_SURCHARGE/displayonly;

801  Begin
         Access SFPNAME, Set SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO, Approximate
     End
     ARSCHKSU:POLICY_NO/displayonly
     If FUNCTION = "ADD" And
        (SFPNAME:NAME[1] = "" And
         FLEN <> 0) Then
     Begin
         Error "No Policy Number On File.  Please verify your Policy Number."
         ARSCHKSU:APPLICATION = 1
     End
     Else If FLEN = 0 Then
     Begin
         Warning "No Policy Number On File, Assuming Application - Press Cancel to Continue"
         ARSCHKSU:APPLICATION = 1
     End
     ;
801  L_APPLICATION_STR[1,3]/displayonly
     Hide If SFPNAME:NAME[1] <> "";
802  SFPNAME:NAME[1]/mask="X(30)"
     If ARSCHKSU:POLICY_NO <> 0 And
        SFPNAME:POLICY_NO  <> ARSCHKSU:POLICY_NO Then
     Error 1212 ;
802  SFQNAME:NAME[1]
     Hide If ARSCHKSU:POLICY_NO <> 0 ;
802  L_APPLICATION_STR/displayonly
     Hide If SFPNAME:NAME[1] <> "" ;
803  ARSCHKSU:MONEY_ORDER/checkbox;
901  Begin
     If FUNCTION = "ADD" And
        ARSCHKSU:PAYOR_TYPE = "C" Then
        Begin
            ARSCHKSU:CHECK_NO = "CreditCard"
        End
     End
     ARSCHKSU:CHECK_NO/default  {Mandatory} ;
901  ARSCHKSU:CHECK_NO/displayonly;
901  Begin
     If FUNCTION = "ADD" And
        ARSCHKSU:MONEY_ORDER = "1" Then
     Begin
         ARSCHKSU:CHECK_NO = "MO-" + ARSCHKSU:CHECK_NO
     End
     End
     ARSCHKSU:CHECK_NO/displayonly;
902  ARSCHKSU:POST_DATED/checkbox;
903  Begin
     If FUNCTION = "ADD" Then
        ARSCHKSU:CHECK_DATE = TODAYSDATE
     End
     ARSCHKSU:CHECK_DATE/default/anchor
     Hide If ARSCHKSU:POST_DATED <> "Y" ;
1001 Begin
     If FUNCTION = "ADD" Then
     Begin
         If ARSCHKSU:PAYOR_TYPE One Of "C" Then
         Begin
             ARSCHKSU:BANK_NO = "CreditCard"
         End
     End
     End
     ARSCHKSU:BANK_NO/default ;
1101 Begin
     If FUNCTION = "ADD" Then
         ARSCHKSU:TRANS_DATE = L_TRANS_DATE -- was todaysdate 2/25/2001
     End
     ARSCHKSU:TRANS_DATE/default ;  -- allow changing but default
1102 Begin
     If FUNCTION = "ADD" Then
     Begin
         ARSCHKSU:DISPOSITION = "OPEN"
     End
     End
     ARSCHKSU:DISPOSITION
     Error "Transaction Description Not on File" If
     ARSDISP:DISPOSITION = ""
     Hide If FUNCTION = "ADD"
     Activehelp ARSDISP:DISPOSITION,
                ARSDISP:DESCRIPTION ;
1201 Begin
     If FUNCTION = "ADD" Then
         ARSCHKSU:CHECK_AMOUNT = L_TOTAL_DUE
     End
     ARSCHKSU:CHECK_AMOUNT/default ;
1201 Begin
     If (FUNCTION = "ADD" Or
         FUNCTION = "CHANGE") And
        G_TOTAL_DUE_NET <> L_TOTAL_DUE And
        ARSCHKSU:CHECK_AMOUNT >= G_TOTAL_DUE_NET And
        (SFPNAME:PAYMENT_PLAN  <> 1 Or
         G_TOTAL_INSTALLMENT_CHARGE  <> 0.00) And
        L_HOLD_BILLING_CTR  = 1 Then
        {
            G_COMPANY      = ARSCHKSU:COMPANY_ID
            G_POLICY_NO    = ARSCHKSU:POLICY_NO
            G_CHECK_NUMBER = ARSCHKSU:CHECK_NO
            G_CHECK_AMOUNT = ARSCHKSU:CHECK_AMOUNT
            G_CHECK_REFERENCE = ARSCHKSU:CHECK_REFERENCE
            G_AGENT_NO     = SFPNAME:AGENT_NO
            G_BANK_NO      = ARSCHKSU:BANK_NO
            G_INSTALLMENT_AMT = L_TOTAL_DUE
            G_APPLY_INSTALLMENT_CREDIT = 0
            ARSCHKSU:CHECK_PAYS_TOTAL = 1
            Display Modal Screen "arsmt01d"
            At Line 5, Column 10
            With Initial Function "SEARCH|CHANGE"
            If G_APPLY_INSTALLMENT_CREDIT = 1 Then
            { Message "Installment Charges will be removed"
              ARSCHKSU:COMMENTS = "Transaction Paid Policy In Full"
              ARSCHKSU:CREDIT_INSTALLMENT_CHAGE = G_APPLY_INSTALLMENT_CREDIT }

            Else
            { Warning "You have selected NOT to remove the Installment Charges"
              ARSCHKSU:COMMENTS = "Operator " + USERNAME + " Did not remove installment charges"
              ARSCHKSU:CREDIT_INSTALLMENT_CHAGE = G_APPLY_INSTALLMENT_CREDIT }
        }
        Else
        { ARSCHKSU:CHECK_PAYS_TOTAL = 0 }
     End
     ARSCHKSU:CHECK_AMOUNT/displayonly;
1301 ARSCHKSU:COMMENTS/default/displayonly  ;
1202 Begin
     If FUNCTION One Of "ADD", "CHANGE" Then
     Begin
         L_BATCH = L_BATCH + ARSCHKSU:CHECK_AMOUNT
         ARSCHKSU:BALANCE = ARSCHKSU:CHECK_AMOUNT
     End
     End
     ARSCHKSU:BALANCE/displayonly
     Error "Check has been deposited, No changes are allowed" If
     FUNCTION One Of "ADD","CHANGE" And ARSCHKSU:DEPOSIT_DATE <> 00.00.0000;
1203 Begin
     If FUNCTION  = "ADD" Then
     Begin
         If FUNCTION  = "ADD" And
            L_CANCELLATION_EXISTS  = "Y" And
            ARSCONTROL:HOLD_CX_CHECKS  One Of 1 Then
         Begin
              ARSCHKSU:CHECK_HOLD = "1"
              ARSCHKSU:COMMENTS = "Check Was received after C/X Eff Date"
         End
     End
     End
     ARSCHKSU:CHECK_HOLD/checkbox/values="0,1" ;
--1203 ARSCHKSU:CHECK_HOLD/checkbox
--     Hide If L_CANCELLATION_EXISTS = "Y";
1204 ARSCHKSU:DEPOSIT_PREMIUM/checkbox/values="0,1";
1002 ARSCHKSU:DEPOSIT_DATE/displayonly ;
1103    Begin
     If FUNCTION = "ADD" Then
        ARSCHKSU:DISPOSITION = "OPEN"--/spacefill
     End
     ARSDISP:DESCRIPTION ;
1301 ARSCHKSU:COMMENTS/default
     Hide
     If (FUNCTION = "ADD" Or
         FUNCTION = "CHANGE") And
        ARSCHKSU:CHECK_AMOUNT = G_TOTAL_DUE_NET And
        SFPNAME:PAYMENT_PLAN  <> 1 ;
1601 /* Begin
     If FUNCTION = "ADD" And
        ARSCHKSU:PAYOR_TYPE <> "I" Then
        Begin
        G_POLICY_NO = ARSCHKSU:POLICY_NO
            Display Modal Screen "arsmt01a"
            At Line 1, Column 1
        End
     End */
     ARSCHKSU:PAYOR_NAME/displayonly ;
1601 Begin
     If FUNCTION = "ADD" And
        ARSCHKSU:PAYOR_TYPE <> "I"  -- Insured
        Then Begin
            ARSCHKSU:PAYOR_NAME       = G_SUPP_NAME
            ARSCHKSU:PAYOR_CARE_OF    = G_CARE_OF
            ARSCHKSU:PAYOR_ADDRESS    = G_STREET
            ARSCHKSU:PAYOR_CITY       = G_CITY_STATE
            ARSCHKSU:PAYOR_ZIPCODE    = G_ZIP_CODE
        End
        Else If FUNCTION = "ADD" And
                ARSCHKSU:PAYOR_TYPE = "I" And
                G_QUOTE_NO = 0 Then
                Begin -- setup insureds information

                Access SFPCURRENT, Set SFPCURRENT:POLICY_NO = ARSCHKSU:POLICY_NO

                Access SFPNAME, Set SFPNAME:POLICY_NO    = SFPCURRENT:POLICY_NO,
                                    SFPNAME:POL_YEAR     = SFPCURRENT:POL_YEAR,
                                    SFPNAME:END_SEQUENCE = SFPCURRENT:END_SEQUENCE

                    ARSCHKSU:PAYOR_NAME       = SFPNAME:NAME[1]
                    ARSCHKSU:PAYOR_CARE_OF    = SFPNAME:NAME[2]
                    ARSCHKSU:PAYOR_ADDRESS    = SFPNAME:ADDRESS[1]
                    ARSCHKSU:PAYOR_CITY       = SFPNAME:CITY
                    ARSCHKSU:PAYOR_STR_STATE  = SFPNAME:STR_STATE
                    ARSCHKSU:PAYOR_ZIPCODE    = SFPNAME:ZIPCODE
        End
        Else If FUNCTION = "ADD" And
                G_QUOTE_NO <> 0 Then
                 Begin
                 Access SFQNAME, Set SFQNAME:QUOTE_NO = G_QUOTE_NO, Exact

                 ARSCHKSU:PAYOR_NAME          = SFQNAME:NAME[1]
                 ARSCHKSU:PAYOR_CARE_OF       = SFQNAME:NAME[2]
                 ARSCHKSU:PAYOR_ADDRESS       = SFQNAME:ADDRESS[1]
                 ARSCHKSU:PAYOR_CITY          = SFQNAME:CITY
                 ARSCHKSU:PAYOR_STR_STATE     = SFQNAME:STR_STATE
                 ARSCHKSU:PAYOR_ZIPCODE       = SFQNAME:ZIPCODE
        End
        End
     ARSCHKSU:PAYOR_NAME/default/uppercase
     If ARSCHKSU:PAYOR_NAME = "" Then
     Begin
         Error "Payor Name Can Not Be Blank"
     End ;
1701 ARSCHKSU:PAYOR_CARE_OF/default/uppercase;
1801 ARSCHKSU:PAYOR_ADDRESS/default/uppercase
     If ARSCHKSU:PAYOR_ADDRESS = "" Then
     Begin
        Error "Payor Address Can Not Be Blank"
     End ;
1901 ARSCHKSU:PAYOR_CITY/default/uppercase
     If ARSCHKSU:PAYOR_CITY = "" Then
     Begin
         Error "Payor City Can Not Be Blank"
     End ;
1902 ARSCHKSU:PAYOR_STR_STATE/uppercase/default
     If ARSCHKSU:PAYOR_STR_STATE = "" Then
     Begin
         Error "Payor State Can Not Be Blank"
     End ;
1903 ARSCHKSU:PAYOR_ZIPCODE/mask="999999999"/default
     If ARSCHKSU:PAYOR_ZIPCODE = 0 Then
     Begin
         Error "Payor Zipcode Can Not Be Zero"
     End ;
1903 Begin
     L_STR_ZIPCODE = Str(ARSCHKSU:PAYOR_ZIPCODE)
     If L_STR_ZIPCODE[1,4]="0000" Or
        L_STR_ZIPCODE[1,4]="" Then
     Begin
           L_STR_ZIPCODE[1,5]=L_STR_ZIPCODE[5,9]
           L_STR_ZIPCODE[6,9]="0000"
     End
     ARSCHKSU:PAYOR_ZIPCODE = Val(L_STR_ZIPCODE)
     End
     ARSCHKSU:PAYOR_ZIPCODE/mask="99999-9999"/displayonly;
1903 Begin
     L_STR_ZIPCODE = Str(ARSCHKSU:PAYOR_ZIPCODE,"999999999")
     If L_STR_ZIPCODE[1,4]="0000" Or
        L_STR_ZIPCODE[1,4]="" Then
        Begin
            L_STR_ZIPCODE[1,5]=L_STR_ZIPCODE[5,9]
            L_STR_ZIPCODE[6,9]="0000"
            ARSCHKSU:PAYOR_ZIPCODE = Val(L_STR_ZIPCODE)
        End
     End
     ARSCHKSU:PAYOR_ZIPCODE/displayonly/mask="99999-9999" ;

1904 ARSCHKSU:CHECK_REFERENCE/displayonly
     If FUNCTION = "ADD" Then
     Begin
         ARSCHKSU:USER_CONSOLE   = CONSOLE
         ARSCHKSU:ENTER_TIME     = SYSTEMTIME
         ARSCHKSU:ENTER_DATE     = SYSTEMDATE
         I_CSEXEC_APPLICATION    = "CHECK_REFERENCE"/spacefill
         Include "sfscsexec.pro"
         ARSCHKSU:CHECK_REFERENCE = I_CSEXEC_NUMBER
         ARSCHKSU:USER            = USERNAME
     End ;
1904    ARSCHKSU:CHECK_REFERENCE/displayonly;

Postupdate

/* this is here incase the user aborts the check because the policy number
   was not the right one.  there should be no invalid notes created because
   this logic is here.
*/
If UPDATEOK = "YES" And
   Abort = "NO" And
   FUNCTION = "ADD" And
   L_CANCELLATION_EXISTS = "Y" Then
   Begin
       Do CREATE_NOTES
   End

Screen Exit
        If ARSCHKSU:COMPANY_ID <> ""
        Then G_COMPANY = ARSCHKSU:COMPANY_ID

        If ARSCHKSU:CHECK_REFERENCE > 0
        Then G_CHECK_REFERENCE = ARSCHKSU:CHECK_REFERENCE ;

        If ARSCHKSU:POLICY_NO > 0
        Then G_POLICY_NO = ARSCHKSU:POLICY_NO;

        If L_TOTAL_DUE <> 0
        Then G_TOTAL_DUE = L_TOTAL_DUE;

        If ARSCHKSU:CHECK_NO <> ""
        Then G_CHECK_NUMBER = ARSCHKSU:CHECK_NO;

        If ARSCHKSU:CHECK_AMOUNT <> 0
        Then G_CHECK_AMOUNT = ARSCHKSU:CHECK_AMOUNT;

Procedure Definition

Procedure GET_BALANCE
Begin
     L_TOTAL = 0
     L_TOTAL_1 = 0
     Access ARSCHKSU_ALT, Set ARSCHKSU_ALT:COMPANY_ID = ARSCHKSU:COMPANY_ID,
                              ARSCHKSU_ALT:CHECK_REFERENCE  = ARSCHKSU:CHECK_REFERENCE
     While ARSCHKSU_ALT:COMPANY_ID      = ARSCHKSU:COMPANY_ID And
           ARSCHKSU_ALT:CHECK_REFERENCE = ARSCHKSU:CHECK_REFERENCE
     Begin
     L_TOTAL = L_TOTAL + ARSCHKSU_ALT:CHECK_AMOUNT
     Next ARSCHKSU_ALT
     End
     L_TOTAL_1 = ARSCHKSU:CHECK_AMOUNT - L_TOTAL
     End

Procedure GET_AMOUNT_DUE
Begin

    L_TOTAL_DUE                = 0
    G_TOTAL_DUE_NET            = 0
    G_TOTAL_INSTALLMENT_CHARGE = 0
    G_TOTAL_SURCHARGE          = 0
    L_HOLD_BILLING_CTR         = 0

    Access ARSBILLING, Set ARSBILLING:COMPANY_ID = ARSCHKSU:COMPANY_ID,
                           ARSBILLING:POLICY_NO = ARSCHKSU:POLICY_NO, Approximate

/* put the company check here, arsbilling:company_id must = arschksu:company_id */

    While ARSBILLING:COMPANY_ID = ARSCHKSU:COMPANY_ID And
          ARSBILLING:POLICY_NO = ARSCHKSU:POLICY_NO
    Begin
    If ARSBILLING:STATUS = "B" Then
    Begin
        L_TOTAL_DUE        = L_TOTAL_DUE + (ARSBILLING:INSTALLMENT_AMOUNT -
                                            ARSBILLING:TOTAL_AMOUNT_PAID)
        L_HOLD_BILLING_CTR = ARSBILLING:BILLING_CTR

    End

    If ARSBILLING:STATUS One Of "O", "B" Then
    Begin
       L_TOTAL_OUTSTANDING = L_TOTAL_OUTSTANDING + (ARSBILLING:INSTALLMENT_AMOUNT -
                                                    ARSBILLING:TOTAL_AMOUNT_PAID -
                                                    ARSBILLING:WRITE_OFF_AMOUNT )
    End

    If (ARSBILLING:STATUS = "B" Or
        ARSBILLING:STATUS = "O") And
       ARSBILLING:TRANS_CODE <> ARSCONTROL:INSTALLMENT_CHARGE_TRANS_CODE Then
       { G_TOTAL_DUE_NET = G_TOTAL_DUE_NET + (ARSBILLING:INSTALLMENT_AMOUNT -
                                              (ARSBILLING:TOTAL_AMOUNT_PAID +
                                               ARSBILLING:WRITE_OFF_AMOUNT))
         G_TOTAL_PREMIUM    = G_TOTAL_DUE_NET
       }

    If (ARSBILLING:STATUS = "B" Or
        ARSBILLING:STATUS = "O") And
       ARSBILLING:TRANS_CODE = ARSCONTROL:INSTALLMENT_CHARGE_TRANS_CODE Then
       { G_TOTAL_INSTALLMENT_CHARGE  = G_TOTAL_INSTALLMENT_CHARGE
        + (ARSBILLING:INSTALLMENT_AMOUNT - ARSBILLING:TOTAL_AMOUNT_PAID) }

    If (ARSBILLING:STATUS = "B" Or
        ARSBILLING:STATUS = "O") And
       ARSBILLING:TRANS_CODE = ARSCONTROL:SURCHARGE_TRANS_CODE Then
       { G_TOTAL_SURCHARGE = G_TOTAL_SURCHARGE
        + (ARSBILLING:INSTALLMENT_AMOUNT - ARSBILLING:TOTAL_AMOUNT_PAID) }

/*    If (ARSBILLING:STATUS = "B" Or
        ARSBILLING:STATUS = "O") And
       (ARSBILLING:TRANS_CODE <> ARSCONTROL:INSTALLMENT_CHARGE_TRANS_CODE And
        ARSBILLING:TRANS_CODE <> ARSCONTROL:SURCHARGE_TRANS_CODE) Then
       { G_TOTAL_PREMIUM = G_TOTAL_PREMIUM
        + (ARSBILLING:INSTALLMENT_AMOUNT - ARSBILLING:TOTAL_AMOUNT_PAID) }
*/
    Next ARSBILLING

    End

End

Procedure CHECK_FOR_CANCELLATION
Begin

L_CANCELLATION_EXISTS = "N"
L_HOLD_CX_EFF_DATE = 00.00.0000

    Access ARSCANCEL, Set ARSCANCEL:COMPANY_ID = ARSCHKSU:COMPANY_ID,
                          ARSCANCEL:POLICY_NO  = ARSCHKSU:POLICY_NO, Approximate

    While ARSCANCEL:COMPANY_ID = ARSCHKSU:COMPANY_ID And
          ARSCANCEL:POLICY_NO  = ARSCHKSU:POLICY_NO
          Begin
              If ARSCANCEL:CX_EFF_DATE <= TODAYSDATE - ARSCONTROL:NON_PAY_GRACE_DAYS And
                 ARSCANCEL:CX_STATUS <> "R" And
                 L_CANCELLATION_EXISTS <> "Y" Then
                 Begin
                    L_CANCELLATION_EXISTS = "Y"
                    L_HOLD_CX_EFF_DATE = ARSCANCEL:CX_EFF_DATE
-- do not add notes here, this is done later so that check info can be added too
              --      Do CREATE_NOTES
                 End
          Next ARSCANCEL
          End
-- checking for cancellations from sfpname

L_POLICY_CX = "N"

Access SFPNAME, Set SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO, Approximate

While SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO
Begin
      If L_POLICY_CX = "N" And
         SFPNAME:STATUS = "CANCELLED" Then
         Begin
             L_POLICY_CX = "Y"
         End
      Else
      If L_POLICY_CX = "Y" And
         SFPNAME:STATUS = "CURRENT" Then
         Begin
             L_POLICY_CX = "N"
         End

         Next SFPNAME
End

End

Procedure CREATE_NOTES
Begin

L_SUB_CODE    = 0
L_HOLD_POLICY_NO = 0
L_HOLD_POL_YEAR  = 0
L_HOLD_END_SEQUENCE = 0

Access SFPNAME, Set SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO, Approximate

While SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO
Begin
    L_HOLD_POLICY_NO = SFPNAME:POLICY_NO
    L_HOLD_POL_YEAR  = SFPNAME:POL_YEAR
    L_HOLD_END_SEQUENCE = SFPNAME:END_SEQUENCE
    Next SFPNAME
End

Access SFPNOTES, Set SFPNOTES:POLICY_NO    = L_HOLD_POLICY_NO,
                     SFPNOTES:POL_YEAR     = L_HOLD_POL_YEAR,
                     SFPNOTES:END_SEQUENCE = L_HOLD_END_SEQUENCE, Approximate

While SFPNOTES:POLICY_NO = L_HOLD_POLICY_NO And
      SFPNOTES:POL_YEAR  = L_HOLD_POL_YEAR And
      SFPNOTES:END_SEQUENCE = L_HOLD_END_SEQUENCE
      Begin
          L_SUB_CODE = L_SUB_CODE + 10
          Next SFPNOTES
      End
      L_SUB_CODE = L_SUB_CODE + 10

Add SFPNOTES
Begin
    SFPNOTES:POLICY_NO    = L_HOLD_POLICY_NO
    SFPNOTES:POL_YEAR     = L_HOLD_POL_YEAR
    SFPNOTES:END_SEQUENCE = L_HOLD_END_SEQUENCE
--    SFPNOTES:BUILD_NO     = 0
--    SFPNOTES:PREM_NO      = 0
    SFPNOTES:TRANS_DATE   = TODAYSDATE
    SFPNOTES:SUB_CODE     = L_SUB_CODE
    SFPNOTES:NOTES = "Check Was Processed by " + USERNAME +" on " +
    Str(TODAYSDATE,"MM/DD/YYYY") + " but was not applied since the  Cancellation"
    + " date was outside of the Grace Period Allowed.  <NL><NL>" +
    "Cancellation Effective Date was " + Str(L_HOLD_CX_EFF_DATE,"MM/DD/YYYY") +
    "<NL>Grace period days is currently " + Str(ARSCONTROL:NON_PAY_GRACE_DAYS) +
    "<NL>Check Number: " + ARSCHKSU:CHECK_NO  +
    "<NL>Check Amount: " + Str(ARSCHKSU:CHECK_AMOUNT,"$$$,$$$,$$$.99-") +
    "<NL><NL>" + Str (SYSTEMTIME,"HH:MM:SS") + "<NL><NL>"
End

End

Procedure SCIPS_MACRO
Begin

    I_SCIPS_SELECT = "Y"

    If I_SCIPS_SELECT = "Y" Then
    Begin
        I_SCIPS_PARAM_NAME = Lowercase(Trun(PROGRAMID))+Trun(Str(PID))+".par"
        Writefile (I_SCIPS_PARAM_NAME,"%n<NL>",ARSCHKSU:CHECK_REFERENCE)
    End

    Include "scipsprint.pro"
Procedure CHECK_FOR_UNPOSTED
Begin

L_UNPOSTED_CHECK = "N"
L_PRIOR_POLICY_NO = 0

Access ARSCHKSU_ALT, Set ARSCHKSU_ALT:POLICY_NO = ARSCHKSU:POLICY_NO, Using Fourth Index, Approximate

While ARSCHKSU_ALT:POLICY_NO = ARSCHKSU:POLICY_NO
Begin
    If ARSCHKSU_ALT:DISPOSITION = "OPEN" Then
    Begin
        L_UNPOSTED_CHECK = "Y"
        L_PRIOR_POLICY_NO = ARSCHKSU_ALT:POLICY_NO
    End
    Next ARSCHKSU_ALT
End

End -- end of procedure

End
