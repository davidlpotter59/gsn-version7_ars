%%
/*   arsup930.sd

     SCIPS.com

     December 8, 2001

     Direct Bill Invoices

     Run                   Description
     Mode      Update
     ====      ======      ===========================
      0          Y         Nightly Processing of Installment Invoices
      1          N         Customer Service Screen
      2          Y         Invoices created with the declaration page
      3          Y         Run from the Manual Processing Selection - Initital Invoices
      4          Y         unused as of 08/04/2002 (DLP)
      5          N         Rerun from the Manual Processing Selection - Initial Invoices and Installment Invoices
      6          Y         Rerun the daily processing for 1st invoices missed, cretes installment charges
      7          N         Customer Service Screen - All Copies
      8          N         Rerun from command line, installment bills (billed date)
      9          X         unsued

      Nighly Processing = cron (UNIX)
      DEC Pages         = sfppr300
      Manual Processing = arsmt300

*/
Program
        Name = "arsup930" ;
        Type="File" ;
        Domain="ARSMENU" ;
        Padcharacter = Space ;

        Global String G_COMPANY_ID[10] ;
        Global Unsigned Ascii Number G_POLICY_NO[9] ;
        Global Wdate G_TRANS_DATE ;
        Global Wdate G_TRANS_EFF ;
        Global Wdate G_TRANS_EXP ;

        Global Wdate G_STARTING_DATE,
                     G_ENDING_DATE;

        Global Unsigned Ascii Number G_TRANS_CODE[4] ;
        Global Unsigned Ascii Number G_LINE_OF_BUSINESS[4] ;
        Global Unsigned Ascii Number G_COMM_RATE[4]/decimals=2 ;
        Global Unsigned Ascii Number G_SUB_CODE[4] ;
        Global Unsigned Ascii Number G_BILLING_CTR[4] ;
        Global Unsigned Ascii Number G_RETURN_CHECK_CTR[4] ;
        Global String G_REPORT_DEVICE[15];

        String L_OPTION[1]="";
        String L_UNDERWRITING_CX[1]="N";
        String L_INVOICE_NAME[50]="arsup930.pcl";
        String L_OUTFILE[15]="arsup930.out";
        Unsigned Ascii Number L_LINE_CTR[3]=0;
        String L_ENTER[1];
        String L_FIRST_TIME[1]="Y";
        Unsigned Ascii Number L_SUB[2];
        Unsigned Ascii Number L_V_POSITION[5]=0/decimals=0;
        String L_ZIPCODE[10]="";
        Unsigned Ascii Number L_LOOP_CTR[2]=0;
        Unsigned Ascii Number L_LINES_PRINTED[2]=0;
        Unsigned Ascii Number L_COPY_CTR[2]=0;

        Unsigned Ascii Number L_PAGES_CTR[4]=0;
        String L_COMPANY[10]="";
        String L_SFS_CODE[3]="SFS";
        Unsigned Ascii Number L_SUB_CODE[4]=0/decimals=0;

        String L_TRANSACTION[50]="";
        String L_LOGFILE[15]="arsup930.log";
        String L_TOTALS_PAGE[1]="N";
        Unsigned Ascii Number L_ERRORS[4]=0;
        Unsigned Ascii Number L_HOLD_POLICY_NO[9]=0/decimals=0;
        Unsigned Ascii Number L_HOLD_POLICY_NO2[9]=0/decimals=0;
        Unsigned Ascii Number L_COPIES_REQUIRED[2]=0;
        Unsigned Ascii Number L_POL_YEAR[4]=0;
        Unsigned Ascii Number L_END_SEQUENCE[4]=0;
        Unsigned Ascii Number L_POLICY_NO[9]=0;
        String L_COPY_LIT[20]="";
        Unsigned Ascii Number L_HOLD_COPY_CTR[4]=0;
        Unsigned Ascii Number L_H_POSITION[4]=0;
        String L_MANUAL_RUN[1]="N";
        Signed Ascii Number L_TOTAL_AMT_DUE[9]=0/decimals=2;
        Signed Ascii Number L_TOTAL_ANNUAL_NET[9]=0/decimals=2;
        Unsigned Ascii Number L_RECORD_COUNTER_69[9]=0/decimals=0;
        Unsigned Ascii Number COUNTER[6]/decimals=0;
        Unsigned Ascii Number L_CREATED_INSTALLMENT_CHARGE[1]=0;

/* buidling the array to hold sfpname keys */
Array [200] Of Unsigned Ascii Number L_SFPNAME_POLICY_NO[9],
                                     L_SFPNAME_POL_YEAR[4],
                                     L_SFPNAME_END_SEQUENCE[4],
                                     L_SFPNAME_PREM_NO[4],
                                     L_SFPNAME_BUILD_NO[4],
                                     L_SFPNAME_SUB_CODE[4];

Array[3] Of String L_PAYOR_NAME[50],
                   L_PAYOR_ADDRESS[50];

String L_PAYOR_CITY[30],
       L_PAYOR_STATE[2],
       L_PAYOR_ZIPCODE[9];

/* mortgagee information for new procedures 06/27/2002 */
Array[3] Of String L_MORT_NAME[50], -- was 50 changed 7/30/2002 per JD - FOS
                                    -- changed back to 50 from 35 08/12/2002 per JD - FOS
                   L_MORT_ADDRESS[50]; -- was 50 changed 7/30/2002 per JD - FOS
                                       -- changed back to 50 from 35 08/12/2002 per JD - FOS

String L_MORT_CITY[30],
       L_MORT_STATE[2],
       L_MORT_ZIPCODE[9];


Unsigned Ascii Number L_SFPNAME_LOOP_CTR[4]=0;
Unsigned Ascii Number L_TEMP_POLICY_NO[9]=0;
Unsigned Ascii Number L_TEMP_POL_YEAR[4]=0;
Unsigned Ascii Number L_TEMP_END_SEQUENCE[4]=0;
Unsigned Ascii Number L_TEMP_PREM_NO[4]=0;
Unsigned Ascii Number L_TEMP_BUILD_NO[4]=0;
Unsigned Ascii Number L_TEMP_SUB_CODE[4]=0;
Unsigned Ascii Number L_ERROR[4]=0;
Unsigned Ascii Number L_NON_PAY_RUN_DAYS[3]=0;
Unsigned Ascii Number L_MAIL_BOOK_CTR[3]=0/decimals=0;
String L_LOB_SUBLINE[2]="00";
String L_RERUN_NOTICES[1]="N";
String L_REPORT_DEVICE[10]="";
String L_LINE_PRINTED[1]="N";
Signed Ascii Number L_TOTAL_AMOUNT_DUE[9]=0/decimals=2;
String L_POLICY_PRINTED[1]="N";
String L_NON_PAY_NOTICE[1]="N";
String L_TRANS_TYPE[1]="";
Global Unsigned Ascii Number G_RUN_MODE[1];
Unsigned Ascii Number L_TRANS_CODE[4]=0/decimals=0;
String L_HOLD_COMPANY_ID[10]="";
Unsigned Ascii Number L_MESSAGE_CTR[2]=0;
Unsigned Ascii Number L_MESSAGE_LEN_CTR[3]=0;

Array[6] Of String L_MESSAGE[50];
Signed Ascii Number L_TOTAL_ANNUAL[9]=0/decimals=2;
Rwdate L_PRIOR_BILLING_DATE=00.00.0000;
Rwdate L_CURRENT_BILLING_DATE=00.00.0000;
Unsigned Ascii Number L_PAYMENT_CTR[2]=0;
Unsigned Ascii Number L_RECORD_CTR[4]=0/decimals=0;
String L_SKIP_PAYMENT[1]="N";
Unsigned Ascii Number L_MAXIMUM_BILLING_CTR[4]=0/decimals=0;
Unsigned Ascii Number L_BILLING_CTR[4]=0/decimals=0;
String L_PAYOR_FOUND[1]="N";
Unsigned Ascii Number L_CTR[2]=0;
Wdate L_HOLD_EXP_DATE;
Wdate L_HOLD_EFF_DATE;
Signed Ascii Number L_FUTURE_AMOUNT_DUE[9]=0/decimals=2;
Signed Ascii Number L_FUTURE_TOTAL_DUE[9]=0/decimals=2;
String L_PAYOR_TYPE[1]="";
String L_MORT_TYPE[1]="";
String L_HEAD_PRINT[1]="";
String L_MORT_TYPE_STRING[40]="";
Telephone L_MORT_TELEPHONE="";
String L_MORT_FOUND[1]="N";
Rwdate L_REVERSE_DATE;
Unsigned Ascii Number L_WORK_HOLD_POLICY_NO[9];
Unsigned Ascii Number L_MESSAGE_LOOP[2]=0/dec=0;
Wdate L_HOLD_TRANS_EFF;
Wdate L_HOLD_TRANS_EXP;

/****** Added 5/3 - jacobr ******/
String L_MORT_ACCOUNT[25] = "";
Unsigned Ascii Number L_UPDATE_CTR[6]=0/decimals=0;
Unsigned Ascii Number L_LAST_TRANS_CODE[2]=0/decimals=0;

/* *****  new check scanning line variables */
string l_check_scan_policy_no[9],
       l_check_scan_due_date[8],
       l_check_scan_current_due[8],
       l_check_scan_total_due[8],
       l_check_scan_check_digit[2],
       l_check_scan_line[50],
       l_check_digit_final_str[3];

-- use this to force amount due to whole numbers without decimals
unsigned ascii number l_check_scan_amount[8]=0/decimals=0;

-- temporary for check digit calculations
array [100] of unsigned ascii number l_check_digit_amount[3];
unsigned ascii number l_check_digit_weight[1],
                      l_check_digit_sub[3]=0/decimals=0,
                      l_check_digit_total[4]=0/decimals=0,
                      l_check_digit_number[4]=0/decimals=0,
                      l_check_digit_raw[4]=0/decimals=0,
                      l_check_digit_final[3]=0/decimals=0;

Include "sdpqueue.var"

        Include "scipserr.var"

        Include "sfsrevname.var"

        Include "csfonts.inc"

        Include "sfscsexec.var"

Initialization

COUNTER = 0

If SYSTEM[1,3]="Win" Then
Begin
    Proc (":cli arsinvwork")/noconsole
    Proc (":cli arsinvwork2")/noconsole
--    Proc (":cli arsinvwork3")/noconsole
End
Else
Begin
    Proc ("arsinvwork.mk")/noconsole
    Proc ("arsinvwork2.mk")/noconsole
    proc ("arsinvwork99.mk")/noconsole
--    Proc (":cli arsinvwork3.mk")/noconsole
End

G_RUN_MODE      = Val(COMMANDLINE[1,1])
G_STARTING_DATE = Date(COMMANDLINE[2,9])
G_ENDING_DATE   = Date(COMMANDLINE[10,17])
G_POLICY_NO     = Val(COMMANDLINE[18,26])
G_REPORT_DEVICE = COMMANDLINE[27,34]
G_TRANS_CODE    = Val(COMMANDLINE[35,38]) -- expecting 0012, 0013 from here

-- why is this not being deleted?
--Deletefile (L_INVOICE_NAME)

Write ("<014>")

Write ("Running ARSUP930.........................<NL>")
Write ("%c%s%n",05001,"Run Mode = ",G_RUN_MODE)

If G_RUN_MODE = 2 Then -- coming in from the dec pages
Begin
   L_INVOICE_NAME = Trun(G_REPORT_DEVICE)+".pcl"
   Deletefile (L_INVOICE_NAME)
End

L_COMPANY = "XXXXXXXXXX" -- get the pointer to the default company record
Access ARSCONTROL, Set ARSCONTROL:COMPANY_ID = L_COMPANY, Approximate

L_SFS_CODE = "SFS"
Access SFSDEFAULT, Set SFSDEFAULT:SFS_CODE = L_SFS_CODE

-- now get the default company
L_COMPANY = SFSDEFAULT:COMPANY_ID
Access ARSCONTROL, Set ARSCONTROL:COMPANY_ID = L_COMPANY, Approximate

Access ARSCONTROL2, Set ARSCONTROL2:COMPANY_ID = L_COMPANY

Access SFSCOMPANY, Set SFSCOMPANY:COMPANY_ID = L_COMPANY

If G_RUN_MODE = 0 Then
Begin
--    G_STARTING_DATE = ARSINVDATE:STARTING_DATE
--                    + ARSCONTROL:TOTAL_DAYS_INVOICE
--    G_ENDING_DATE   = ARSINVDATE:ENDING_DATE
--                    + ARSCONTROL:TOTAL_DAYS_INVOICE

-- G_ENDING_DATE = TODAYSDATE + ARSCONTROL:BILL_INSTALLMENTS_DAYS_ADVANCE

If ARSCONTROL2:AS_OF_INVOICES One Of 1 Then
Begin
    G_STARTING_DATE = 01.01.0000 -- very beginning of time
End
Else
Begin
    G_STARTING_DATE = G_ENDING_DATE - ARSCONTROL:TOTAL_DAYS_INVOICE
End

Write ("<014>")
Write ("%c%s%n",01001,"Run Mode           = ",G_RUN_MODE)
Write ("%c%s%d",02001,"Starting Date      = ",G_STARTING_DATE)
Write ("%c%s%d",03001,"Ending Date        = ",G_ENDING_DATE)
proc ("arsinvwork.mk")/noconsole

    If G_REPORT_DEVICE = "" Then
    Begin
        G_REPORT_DEVICE = ARSCONTROL:INVOICE_PRINTER
    End
    Access ARSINVDATE, Set ARSINVDATE:COMPANY_ID = ARSCONTROL:COMPANY_ID
    If ARSINVDATE:COMPANY_ID = ARSCONTROL:COMPANY_ID Then
    Begin
    Change ARSINVDATE
    Begin
        ARSINVDATE:STARTING_DATE = G_STARTING_DATE + ARSCONTROL:TOTAL_DAYS_INVOICE
        ARSINVDATE:ENDING_DATE   = G_ENDING_DATE + ARSCONTROL:TOTAL_DAYS_INVOICE
        ARSINVDATE:RUN_DATE      = TODAYSDATE
        ARSINVDATE:USER          = USERNAME + TERMINAL
    End
    End -- end of record exists
    Else If ARSINVDATE:COMPANY_ID <> ARSCONTROL:COMPANY_ID Then
    Begin
    Add ARSINVDATE
    Begin
        ARSINVDATE:COMPANY_ID    = ARSCONTROL:COMPANY_ID
        ARSINVDATE:STARTING_DATE = G_STARTING_DATE + ARSCONTROL:TOTAL_DAYS_INVOICE
        ARSINVDATE:ENDING_DATE   = G_ENDING_DATE + ARSCONTROL:TOTAL_DAYS_INVOICE
        ARSINVDATE:RUN_DATE      = TODAYSDATE
        ARSINVDATE:USER          = USERNAME + TERMINAL
    End
    End
End

-- run modes tested below
--      1          N         Customer Service Screen
--      2          Y         Invoices created with the declaration page
--      6          Y         Rerun the daily processing for 1st invoices missed, cretes installment charges
--      7          N         Customer Service Screen - All Copies

If G_RUN_MODE One Of 1,2,6,7 Then
Begin
    Do BUILD_INVOICE_WORK_FILE_POLICY_NO
    If L_MAXIMUM_BILLING_CTR < 2 And
       L_LAST_TRANS_CODE One Of 10 Then
    Begin
        Do PROCESS_PAYMENTS_RECEIVED
    End
End
Else
Begin
   Do BUILD_INVOICE_WORK_FILE
End

--If G_RUN_MODE Not One Of 1,7 Then
--Begin
    Do CHECK_FOR_MINIMUM_AMOUNTS
--End

-- arsinvwork2 is used to print future installments in due date order and not
-- transaction date order
-- added May 2, 2002 (DLP)

Do BUILD_INVOICE_WORK_FILE2

Do NEW_NOTICES

--Writefile (L_INVOICE_NAME, "%s<NL>","                                     ")
--Do EJECT_PAGE

Writefile(L_INVOICE_NAME,"%s%s",L_RESET,"<NL>")  -- reset the printer

Closefile(L_INVOICE_NAME)
If G_RUN_MODE Not One Of 2 Then
Begin
If G_REPORT_DEVICE <> "visual" Then
Begin
    If SFSCOMPANY:DEBUG_MODE = 0 Then
    Begin
        Proc("lp -d %s -oraw %s",Trun(G_REPORT_DEVICE), L_INVOICE_NAME)/noconsole
    End
    Else
    Begin
        Proc("lp -d %s -oraw %s",Trun(G_REPORT_DEVICE), L_INVOICE_NAME)
    End
End
End

/* new document processing system interface */

If G_RUN_MODE Not One Of 2 Then -- do not do this when coming from dec pages
Begin

L_SFS_CODE = "SFS"
Access SFSDEFAULT, Set SFSDEFAULT:SFS_CODE = L_SFS_CODE

-- these need to be assigned prior to the include file
    I_INVOICE_NAME  = L_INVOICE_NAME
    I_COMPANY_ID    = SFSDEFAULT:COMPANY_ID
    I_REPORT_DEVICE = G_REPORT_DEVICE
    I_STARTING_DATE = G_STARTING_DATE
    I_ENDING_DATE   = G_ENDING_DATE
    I_RUN_MODE      = G_RUN_MODE

Include "sdpqueue.pro"

End -- end of checking for run_mode = 2

Update


Screen Exit
/* since the last record would force the program to exit the loop for
   arscxwork the last policy number would not have its accumulator
   incremented on sfpname, this will allow that record to be updated */

Closefile( L_LOGFILE )
If G_STARTING_DATE <> 00.00.0000 And
   G_ENDING_DATE   <> 00.00.0000 Then
   Begin
   Deletefile (L_OUTFILE)
   Writefile (L_OUTFILE,"<NL>")
   Writefile (L_OUTFILE,"%s%s","==========| Automatic Invoice Processing |=========", "<NL><NL>")
   Writefile (L_OUTFILE,"%s%d%s","Starting Date =====| ",G_STARTING_DATE,             "<NL>")
   Writefile (L_OUTFILE,"%s%d%s","Ending Date   =====| ",G_ENDING_DATE,               "<NL>")
   Writefile (L_OUTFILE,"%s%s%s","Username      =====| ",USERNAME,                    "<NL>")
   Writefile (L_OUTFILE,"%s%d%s","Rundate       =====| ",TODAYSDATE,                  "<NL>")
   Writefile (L_OUTFILE,"%s%t%s","System Time   =====| ",SYSTEMTIME,                  "<NL>")
   Writefile (L_OUTFILE,"%s%s%s","Manual Run    =====| ",L_MANUAL_RUN,                "<NL>")
   Writefile (L_OUTFILE,"%s%n%s","Days Since Due=====| ",L_NON_PAY_RUN_DAYS,          "<NL>")
   Writefile (L_OUTFILE,"%s%n%s","Completed with ====| ",L_ERRORS," number of errors   <NL>")
   Writefile (L_OUTFILE,"%s","<NL>If Manual Run is 'Y' then Days Since Due will be zero.<NL>")
   Writefile (L_OUTFILE,"%s","<NL>NOTE: if the number of errors reported on the line above <NL>")
   Writefile (L_OUTFILE,"%s","is greater than 0 (ZERO) then there was a problem with the <NL>")
   Writefile (L_OUTFILE,"%s","automatic invoicing procedure.  Please contact SCIPS at 1-877-724-7799 or<NL>")
   Writefile (L_OUTFILE,"%s%s","email ",Trun(ARSINVDATE_ALT:COMPANY_ID))
   Writefile (L_OUTFILE,"%s","@scips.com for immediate help<NL><NL>")
   Writefile (L_OUTFILE,"%s%s","==========| Automatic Invoice Processing Completed |=========","<NL><NL>")
   Closefile (L_OUTFILE)
--   Proc (":cli mail -s arsup930 davep@scips.com < %s",Trun(L_OUTFILE))/noconsole
   End

    Proc ("arsinvwork.mk")/noconsole
    Proc ("arsinvwork2.mk")/noconsole
    proc ("arsinvwork99.mk")/noconsole

Errors
If ERRORNUMBER <> ERR_EOF Then
Begin
    L_ERRORS = L_ERRORS + 1
    Writefile (L_LOGFILE,"arsup930 had errors<NL>")
    Writefile (L_LOGFILE,"Date of run: %d<NL> ",TODAYSDATE )
    Writefile (L_LOGFILE,"Time of run: %t<NL> ",SYSTEMTIME )
    Writefile (L_LOGFILE,"Policy No  : %n<NL> ",ARSBILLING:POLICY_NO )
    Writefile (L_LOGFILE,"Error        %n %s<NL><NL> ",ERRORNUMBER,ERRORTEXT)
    Writefile (L_LOGFILE,"========================================<NL><NL>")
End

Procedure Definition

Procedure BUILD_INVOICE_WORK_FILE_POLICY_NO
Begin

L_LAST_TRANS_CODE = 0

Access ARSBILLING, Set ARSBILLING:COMPANY_ID = L_COMPANY,
                       ARSBILLING:POLICY_NO  = G_POLICY_NO, Approximate

While ARSBILLING:POLICY_NO = G_POLICY_NO
Begin

If L_HOLD_POLICY_NO2 = 0 Then -- first time through
Begin
    L_HOLD_POLICY_NO2            = ARSBILLING:POLICY_NO
    L_HOLD_TRANS_EFF             = ARSBILLING:TRANS_EFF
    L_HOLD_TRANS_EXP             = ARSBILLING:TRANS_EXP
    L_LAST_TRANS_CODE            = ARSBILLING:TRANS_CODE
    L_CREATED_INSTALLMENT_CHARGE = 0
End

If L_HOLD_POLICY_NO2 <> ARSBILLING:POLICY_NO Then
Begin
    L_HOLD_POLICY_NO2            = ARSBILLING:POLICY_NO
    L_HOLD_TRANS_EFF             = ARSBILLING:TRANS_EFF
    L_HOLD_TRANS_EXP             = ARSBILLING:TRANS_EXP
    L_LAST_TRANS_CODE            = ARSBILLING:TRANS_CODE
    L_CREATED_INSTALLMENT_CHARGE = 0
End

If L_HOLD_TRANS_EFF < ARSBILLING:TRANS_EFF Then
Begin
    L_HOLD_TRANS_EFF = ARSBILLING:TRANS_EFF
End

If L_HOLD_TRANS_EXP < ARSBILLING:TRANS_EXP Then
Begin
    L_HOLD_TRANS_EXP = ARSBILLING:TRANS_EXP
End

       Do CHECK_FOR_UNDERWRITING_CX
       Do CHECK_FOR_NON_PAY

If G_RUN_MODE One Of 1,7 And -- run from customer service
   ARSBILLING:POLICY_NO = G_POLICY_NO And
   /* from the customer service screen let an invoice be created
      even if one or both of these types of cancellations is outstanding */
--   L_UNDERWRITING_CX   <> "Y" And
--   L_NON_PAY_NOTICE    <> "Y" And
--    ARSBILLING:DUE_DATE >= G_STARTING_DATE And -- need ending and starting on rerun
    ARSBILLING:DUE_DATE <= G_ENDING_DATE And
    ARSBILLING:BILL_PLAN = "DB" And
    ARSBILLING:STATUS One Of "B"
   Then
   Begin
      Do ADD_ARSINVWORK
   End

If G_RUN_MODE  One Of 2 And -- run from dec page processing
   ARSBILLING:POLICY_NO = G_POLICY_NO And
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
-- dlp - 09/16/2003 - removed this option check since we would want
-- all endorsements to print all prior "B" so that the invoice
-- is a total of all amounts due
--   ARSBILLING:BILLING_CTR = 1 And  -- initial invoices
/* this will pick up all missed initial invoices to date */
   ARSBILLING:DUE_DATE >= G_STARTING_DATE And
   ARSBILLING:DUE_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB"
   And ARSBILLING:STATUS One Of "B" -- coming from the dec page this should be "O"
   Then
   Begin
      Do ADD_ARSINVWORK
      If ARSBILLING:PRINTED <> 1 Then
      Begin
          Do UPDATE_ARSBILLING
      End
   End

If G_RUN_MODE  One Of 6 And -- run from dec page processing
   ARSBILLING:POLICY_NO = G_POLICY_NO And
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
   ARSBILLING:BILLING_CTR = 1 And  -- initial invoices
/* this will pick up all missed initial invoices to date */
   ARSBILLING:DUE_DATE >= G_STARTING_DATE And
   ARSBILLING:DUE_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB"
   And ARSBILLING:STATUS One Of "O" -- coming from the dec page this should be "O"
   Then
   Begin
      Do ADD_ARSINVWORK
      Do UPDATE_ARSBILLING
   End
   If ARSBILLING:TRANS_CODE > L_LAST_TRANS_CODE And
      ARSBILLING:TRANS_CODE One Of  10, 14 Then
   Begin
       L_LAST_TRANS_CODE = ARSBILLING:TRANS_CODE
   End

   Next ARSBILLING

End -- end of while

End -- end of procedure

Procedure BUILD_INVOICE_WORK_FILE
Begin

L_RECORD_COUNTER_69 = 0

Access ARSBILLING, Set ARSBILLING:COMPANY_ID = L_COMPANY, Approximate

While ARSBILLING:ERRORNUMBER <> ERR_EOF
Begin

/* l_record_counter_69 = l_record_counter_69 + 1
if l_record_counter_69 mod 100 = 0 then
begin
     write ("%c%s%n",09001,"Records  = ",l_record_counter_69)
end
*/

COUNTER = COUNTER + 1
If COUNTER Mod 100 = 0 Then
Begin
    Write ("%c%s%n",05001,"Building Workfile Counter = ",COUNTER )
End

If L_HOLD_POLICY_NO2 = 0 Then -- first time through
Begin
    L_HOLD_POLICY_NO2 = ARSBILLING:POLICY_NO
    L_CREATED_INSTALLMENT_CHARGE = 0
End

If L_HOLD_POLICY_NO2 <> ARSBILLING:POLICY_NO Then
Begin
    L_HOLD_POLICY_NO2 = ARSBILLING:POLICY_NO
    L_HOLD_TRANS_EFF  = ARSBILLING:TRANS_EFF
    L_HOLD_TRANS_EXP  = ARSBILLING:TRANS_EXP
    L_CREATED_INSTALLMENT_CHARGE = 0
End

If L_HOLD_TRANS_EFF < ARSBILLING:TRANS_EFF Then
Begin
    L_HOLD_TRANS_EFF = ARSBILLING:TRANS_EFF
End

If L_HOLD_TRANS_EXP < ARSBILLING:TRANS_EXP Then
Begin
    L_HOLD_TRANS_EXP = ARSBILLING:TRANS_EXP
End

--if arsbilling:due_date <= g_ending_date and
--   arsbilling:status one of "O" and
--   arsbilling:bill_plan = "DB" then
--  begin
       Do CHECK_FOR_UNDERWRITING_CX
       Do CHECK_FOR_NON_PAY
--  end
--Do CHECK_FOR_UNDERWRITING_CX
--Do CHECK_FOR_NON_PAY

If ARSCONTROL:PRINT_ALL_PAST_DUE One Of 0 And
   G_RUN_MODE  = 0 And  -- nightly processing of installment
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
--   ARSBILLING:BILLING_CTR > 1 And -- subsequent invoices
/* this will pick up all missed installment invoices to date */
  (ARSBILLING:DUE_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB" And
   ARSBILLING:STATUS One Of "O")   -- pickup OPENS only
   Then
   Begin
      Do ADD_ARSINVWORK
      Do UPDATE_ARSBILLING
   End

If ARSCONTROL:PRINT_ALL_PAST_DUE One Of 1 And
   G_RUN_MODE  = 0 And  -- nightly processing of installment
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
/* this will pick up all missed installment invoices to date */
  (ARSBILLING:DUE_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB" And
   ARSBILLING:STATUS One Of "O", "B")   -- pickup OPENS only
   Then
   Begin
      Do ADD_ARSINVWORK
      Do UPDATE_ARSBILLING
   End

If G_RUN_MODE  = 3 And -- run from screen select
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
   ARSBILLING:BILLING_CTR = 1 And  -- initial invoices
   ARSBILLING:DUE_DATE >= G_STARTING_DATE And
   ARSBILLING:DUE_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB" And
   ARSBILLING:STATUS One Of "O"
   Then
   Begin
      Do ADD_ARSINVWORK
      Do UPDATE_ARSBILLING
   End

If G_RUN_MODE  = 4 And -- run from screen select
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
   ARSBILLING:BILLING_CTR > 1 And  -- installment invoices
   -- april 11,2002 - dlp- was due_date now billed_date
  ((ARSBILLING:DUE_DATE >= G_STARTING_DATE And
    ARSBILLING:DUE_DATE <= G_ENDING_DATE And
    ARSBILLING:BILL_PLAN = "DB" And
    ARSBILLING:STATUS One Of "O") Or
   (ARSBILLING:STATUS = "O" And
    ARSBILLING:DUE_DATE < G_STARTING_DATE))
   Then
   Begin
      Do ADD_ARSINVWORK
      Do UPDATE_ARSBILLING
   End

/* re-print both intial and installment invoices */
If G_RUN_MODE  = 5 And -- run from screen select
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
   -- april 11 2002 - changed from due date to billed date
   ARSBILLING:BILLED_DATE >= G_STARTING_DATE And
   ARSBILLING:BILLED_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB" And
   ARSBILLING:STATUS One Of "B"
   Then
   Begin
      Do ADD_ARSINVWORK
   End

/* re-print both installment invoices */
If G_RUN_MODE  = 8 And -- run from screen select
   L_UNDERWRITING_CX   <> "Y" And
   L_NON_PAY_NOTICE    <> "Y" And
   ARSBILLING:BILLED_DATE >= G_STARTING_DATE And
   ARSBILLING:BILLED_DATE <= G_ENDING_DATE And
   ARSBILLING:BILL_PLAN = "DB" And
   ARSBILLING:STATUS One Of "B" And
   ARSBILLING:BILLING_CTR > 1
   Then
   Begin
      Do ADD_ARSINVWORK
   End

   Next ARSBILLING

End

End


Procedure NEW_NOTICES
Begin

L_FIRST_TIME = "Y"
L_COMPANY = ""
L_TOTALS_PAGE = "N"
L_COPIES_REQUIRED = 0
L_POLICY_PRINTED  = "N"

Deletefile(L_INVOICE_NAME)

-- commented the next 2 lines on march 28, 2002
--Writefile(L_INVOICE_NAME,"%s<NL>",L_RESET)  -- reset the printer
--Writefile(L_INVOICE_NAME,"%s<NL>","<033>&l2A")  -- set to letter size

L_LINES_PRINTED = 0 -- to track the lines being printed
L_PAGES_CTR     = 0
L_COPY_CTR      = 0 -- this is only to control the # of stmts for testing, remove for live

Access ARSINVWORK, Set ARSINVWORK:COMPANY_ID = L_COMPANY, Approximate

While ARSINVWORK:COMPANY_ID <> ""  -- not end of file
Begin

If L_FIRST_TIME = "Y" Then
Begin
    L_POLICY_PRINTED   = "N"
    L_FIRST_TIME       = "N"
    L_TOTAL_AMOUNT_DUE = 0.00
    L_MAXIMUM_BILLING_CTR = 0
    L_HOLD_COMPANY_ID  = ARSINVWORK:COMPANY_ID
    L_HOLD_POLICY_NO   = ARSINVWORK:POLICY_NO
    L_HOLD_EXP_DATE    = ARSINVWORK:EXP_DATE
    L_HOLD_EFF_DATE    = ARSINVWORK:EFF_DATE
    L_PAGES_CTR = 1
    Do GET_CURRENT_SFPNAME
    Access SFPNAME, Set SFPNAME:POLICY_NO    = L_POLICY_NO,
                        SFPNAME:POL_YEAR     = L_POL_YEAR,
                        SFPNAME:END_SEQUENCE = L_END_SEQUENCE
    L_COPY_CTR = 3 -- start at 3 since this is a fixed number
    Do GET_NUMBER_OF_COPIES
    L_HOLD_COPY_CTR = 1
    Do EJECT_PAGE
    Do PRINT_FORM
    L_LINES_PRINTED = 0
    L_V_POSITION    = 1800
End

If L_HOLD_POLICY_NO <> ARSINVWORK:POLICY_NO Then
Begin
    L_POLICY_PRINTED = "N"
    L_PAGES_CTR = 1
    -- sets l_policy_no, l_pol_year and l_end_sequence values
    L_HOLD_COMPANY_ID = ARSINVWORK:COMPANY_ID
    L_HOLD_POLICY_NO = ARSINVWORK:POLICY_NO
    L_HOLD_EXP_DATE  = ARSINVWORK:EXP_DATE
    L_HOLD_EXP_DATE  = ARSINVWORK:EFF_DATE
    Do GET_CURRENT_SFPNAME
    Access SFPNAME, Set SFPNAME:POLICY_NO    = L_POLICY_NO,
                        SFPNAME:POL_YEAR     = L_POL_YEAR,
                        SFPNAME:END_SEQUENCE = L_END_SEQUENCE
    L_COPY_CTR = 3 -- start at 3 since this is a fixed number
    Do GET_NUMBER_OF_COPIES
    L_HOLD_COPY_CTR = 1
    Do EJECT_PAGE
    Do PRINT_FORM
    L_LINES_PRINTED = 0
    L_V_POSITION    = 1800
    L_MAXIMUM_BILLING_CTR = 0
--    L_LINE_PRINTED  = "N"
End

If L_POLICY_PRINTED = "N" Then
Begin

L_POLICY_PRINTED = "Y"

L_COPY_CTR = 3
For L_SUB = 1 To L_COPY_CTR
Begin

/* loop here for the number of copies needed */
If L_HOLD_COPY_CTR <> L_SUB Then
{
If ( (ARSCONTROL:INVOICE_COPIES_TO_PRINT One Of "I" And
      L_SUB <> 0) Or
     (ARSCONTROL:INVOICE_COPIES_TO_PRINT One Of "A" And
      L_SUB <> 3) Or
     (ARSCONTROL:INVOICE_COPIES_TO_PRINT One Of "P" And
      L_SUB One Of 1)) Then
   Begin
    L_PAGES_CTR = 1
    L_HOLD_COPY_CTR = L_SUB
    Do EJECT_PAGE
--    Do PRINT_DETAIL_LINE
    Do PRINT_FORM
    L_LINES_PRINTED = 0
    L_V_POSITION    = 1800
--    L_LINE_PRINTED  = "N"
    End
}

If ( (ARSCONTROL:INVOICE_COPIES_TO_PRINT One Of "I" And
      L_SUB <> 0) Or
     (ARSCONTROL:INVOICE_COPIES_TO_PRINT One Of "A" And
      L_SUB <> 3) Or
     (ARSCONTROL:INVOICE_COPIES_TO_PRINT One Of "P" And
      L_SUB One Of 1)) Then
   Begin
    Do PRINT_DETAIL_LINE
    Do PRINT_TOTAL_DUE
    If ARSCONTROL:PRINT_FUTURE_INSTALLMENTS = 1 Then
    Begin
        Do PRINT_POLICY_INSTALLMENTS
    End
End

End -- end of loop

End -- end of l_policy_printed check

Next ARSINVWORK

End -- end of checking for 0 policy no

Closefile(L_INVOICE_NAME)

End -- end of new_invoices

/* *****************  Printing Invoice Form ************************** */
Procedure PRINT_FORM
Begin

L_TOTALS_PAGE = "N"
L_TOTAL_ANNUAL_NET = 0.00
L_TOTAL_ANNUAL     = 0.00

/*  setup access to all external files here */

Access SFSCOMPANY, Set SFSCOMPANY:NAME = ARSINVWORK:COMPANY_ID, Approximate

Access SFSDEFAULT, Set SFSDEFAULT:SFS_CODE = L_SFS_CODE

Access SFSCOMPANY, Set SFSCOMPANY:COMPANY_ID = SFSDEFAULT:COMPANY_ID

Access ARSCONTROL, Set ARSCONTROL:COMPANY_ID = ARSINVWORK:COMPANY_ID, Approximate

Access SFSAGENT, Set SFSAGENT:COMPANY_ID = ARSINVWORK:COMPANY_ID,
                     SFSAGENT:AGENT_NO   = ARSINVWORK:AGENT_NO, Generic

Access SFSLINE, Set SFSLINE:COMPANY_ID       = ARSINVWORK:COMPANY_ID,
                    SFSLINE:LINE_OF_BUSINESS = ARSINVWORK:LINE_OF_BUSINESS,
                    SFSLINE:LOB_SUBLINE      = L_LOB_SUBLINE, Approximate

Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID       = ARSINVWORK:COMPANY_ID,
                       ARSPAYPLAN:LINE_OF_BUSINESS = ARSINVWORK:LINE_OF_BUSINESS,
                       ARSPAYPLAN:PAYMENT_PLAN     = ARSINVWORK:PAYMENT_PLAN, Approximate

Do GET_CURRENT_SFPNAME

Access SFPNAME, Set SFPNAME:POLICY_NO    = L_POLICY_NO,
                    SFPNAME:POL_YEAR     = L_POL_YEAR,
                    SFPNAME:END_SEQUENCE = L_END_SEQUENCE

/* end of access setup */

-- select tray to print to
Writefile(L_INVOICE_NAME,"<033>%s<NL>",Trun(ARSCONTROL:INVOICE_TRAY_OPTION))

Writefile(L_INVOICE_NAME,"<033>&a90h0V") -- CAP to top
Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL)

/* draw the box around the form */

     -- left and right verticle lines --          2900 replaced by 3050
     -- was 2900
Writefile(L_INVOICE_NAME,"<033>&a90h0V<033>*c5a3000b0P<NL>")
Writefile(L_INVOICE_NAME,"<033>&a5670h0V<033>*c5a3000b0P")
Writefile(L_INVOICE_NAME,"<033>&a0h0V") -- CAP

     -- top and bottom horizontal lines --
Writefile(L_INVOICE_NAME,"<033>&a90h0V<033>*c5580h5v0P<NL>")
-- was 6960
Writefile(L_INVOICE_NAME,"<033>&a90h7200V<033>*c5580h5v0P")
Writefile(L_INVOICE_NAME,"<033>&a0h0V") -- CAP

/* draw lines within the form */
Writefile(L_INVOICE_NAME,"<033>&a90h1440V<033>*c5580h5v0P<NL>") -- 1st line
Writefile(L_INVOICE_NAME,"<033>&a90h1620V<033>*c5580h5v0P<NL>") -- 2nd line
Writefile(L_INVOICE_NAME,"<033>&a90h1800V<033>*c5580h5v0P<NL>") -- 3rd line
-- was 5390
Writefile(L_INVOICE_NAME,"<033>&a90h5040V<033>*c5580h5v0P<NL>") -- 4th line
Writefile(L_INVOICE_NAME,"<033>&a90h1620V<033>*c2325a75b5g2P<NL>") -- shading

/* draw small verticle lines in headings */
Writefile(L_INVOICE_NAME,"<033>&a810h1620V<033>*c5a80b0P<NL>")  -- 1st line
Writefile(L_INVOICE_NAME,"<033>&a1530h1620V<033>*c5a80b0P<NL>") -- 2nd line
Writefile(L_INVOICE_NAME,"<033>&a3780h1620V<033>*c5a80b0P<NL>") -- 3rd line
Writefile(L_INVOICE_NAME,"<033>&a4680h1620V<033>*c5a80b0P<NL>") -- 4th line

/* draw pay this amount box */
-- was 5390
Writefile(L_INVOICE_NAME,"<033>&a2800h5040V<033>*c5a150b0P<NL>") -- left side verticle line
-- was 5750
Writefile(L_INVOICE_NAME,"<033>&a2800h5400V<033>*c2880h5v0P<NL>") -- bottom of box

/* draw fold tick mark */
Writefile(L_INVOICE_NAME,"<033>&a90h4635V<033>*c150h5v0P<NL>")

/* print arscontrol items */
Writefile(L_INVOICE_NAME,"%s",L_ARIAL)
-- was 5040
Writefile(L_INVOICE_NAME,"<033>&a180h4770V")
Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_PAYTO+"<NL>")
-- was 5040
Writefile(L_INVOICE_NAME,"<033>&a3240h4770V")
Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_COMPANY+"<NL>")
Writefile(L_INVOICE_NAME,"<033>&a3240h5160V")
Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_SLOGAN+"<NL>")
-- was 5390
Writefile(L_INVOICE_NAME,"<033>&a180h5040V")
Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_SEPERATOR+"<NL>")
Writefile(L_INVOICE_NAME,"<033>&a3100h5400V") -- was 5940V
Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_PAYMENT_OPTIONS+"<NL>")
Writefile(L_INVOICE_NAME,"%s",L_ARIAL_ITALIC_12)
Writefile(L_INVOICE_NAME,"<033>&a2800h5520V") -- was 6060V
Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_CLOSING+"<NL>")
--  REMOVE THIS
--Writefile(L_INVOICE_NAME,"<033>&a800h4500V")
--Writefile(L_INVOICE_NAME,"%s",L_COPYRIGHT_12)

Writefile(L_INVOICE_NAME,"%s",L_ARIAL)

/* print invoice message
do not print if other than first installment and
payment plan not equal to annual */

Access ARSCONTROL2, Set ARSCONTROL2:COMPANY_ID = ARSCONTROL:COMPANY_ID

If ARSCONTROL2:PRINT_INVOICE_MESSAGE One Of 1 Then
Begin
-- this is the default setting - if no values are entered
-- then these will be used.
L_V_POSITION = 2880
L_H_POSITION = 450

If ARSCONTROL2:INVOICE_MESSAGE_V_POSITION <> 0 Then
Begin
    L_V_POSITION = ARSCONTROL2:INVOICE_MESSAGE_V_POSITION
End

If ARSCONTROL2:INVOICE_MESSAGE_H_POSITION <> 0 Then
Begin
    L_H_POSITION = ARSCONTROL2:INVOICE_MESSAGE_H_POSITION
End

For L_MESSAGE_LOOP = 1 To 6
Begin
    L_V_POSITION = L_V_POSITION + 120
    Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
    Writefile(L_INVOICE_NAME,"%s",ARSCONTROL:INVOICE_MESSAGE_ARRAY[L_MESSAGE_LOOP])
End

End -- end of condition for arscontrol2:print_invoice_message one of 1

If (ARSCONTROL2:PRINT_TOTAL_DUE_ALL_INSTALLMENTS One Of 1 And
    G_TRANS_CODE Not One Of 12,13 And
   (ARSINVWORK:PAYMENT_PLAN Not One Of 1 And
    ARSINVWORK:PAST_DUE  Not One Of "Y" And
    ARSINVWORK:TRANS_CODE One Of 10,11,12,13,14,16)) Or

   (ARSCONTROL2:PRINT_TOTAL_DUE_ALL_INSTALLMENTS One Of 0 And
    G_TRANS_CODE Not One Of 12,13 And
   (ARSINVWORK:BILLING_CTR One Of 1 And
    ARSINVWORK:PAYMENT_PLAN Not One Of 1 And
    ARSINVWORK:PAST_DUE  Not One Of "Y" And
    ARSINVWORK:TRANS_CODE One Of 10,11,12,13,14,16)) or

-- new logic for lebins - print failure notice on annual
   (ARSCONTROL2:PRINT_TOTAL_DUE_ALL_INSTALLMENTS One Of 1 And
    G_TRANS_CODE Not One Of 12,13 And
   (ARScontrol2:print_failure_on_annual One Of 1 And
    ARSINVWORK:PAST_DUE  Not One Of "Y" And
    ARSINVWORK:TRANS_CODE One Of 10,11,12,13,14,16)) Then
   Begin
Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD_12)

L_TOTAL_ANNUAL_NET = ARSINVWORK:TOTAL_ANNUAL

If ARSCONTROL2:PRINT_TOTAL_DUE_ALL_INSTALLMENTS One Of 1 And
   ARSINVWORK:BILLING_CTR  > 1 Then
Begin
    L_TOTAL_ANNUAL_NET = ARSINVWORK:TOTAL_ANNUAL /* - ARSINVWORK:TOTAL_AMOUNT_PAID*/
End

If ARSCONTROL:INCLUDE_AMOUNT_PAID_FOR_TOTAL One Of 0 And
   ARSINVWORK:BILLING_CTR  = 1 Then -- yes
Begin
   L_TOTAL_ANNUAL_NET = L_TOTAL_ANNUAL_NET + ARSINVWORK:TOTAL_AMOUNT_PAID
End

If ARSCONTROL:INCLUDE_INSTALL_CRG_FOR_PREMIUM = 1 Then -- yes
Begin
   L_TOTAL_ANNUAL_NET = L_TOTAL_ANNUAL_NET + ARSINVWORK:INSTALLMENT_CHARGE
End

/* requesting the insured to look on the back of the current invoice */

if arsinvwork:payment_plan not one of 1 then
begin

If ARSCONTROL2:BACK_OF_INVOICE_NOTICE One Of 1 Then
Begin
    L_V_POSITION = 3360
    L_H_POSITION = 450
    Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
    Writefile(L_INVOICE_NAME,"%s",Trun(ARSCONTROL2:BACK_OF_INVOICE_REFERENCE))
End

end -- end of back reference for annual pay

If (ARSCONTROL2:PRINT_INVOICE_MESSAGE One Of 0 And
    G_TRANS_CODE Not One Of 12,13) Or
    ARSCONTROL2:PRINT_TOTAL_DUE_ALL_INSTALLMENTS One Of 1 Then
Begin

L_V_POSITION = 3960
L_H_POSITION = 450

if arsinvwork:payment_plan not one of 1 then
begin

Writefile(L_INVOICE_NAME,"%s",L_ARIAL_12)

Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
Writefile(L_INVOICE_NAME,"%s","Your total Premium due is" + Trun(Str(L_TOTAL_ANNUAL_NET,"($$$,$$$.99)")))

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
Writefile(L_INVOICE_NAME,"%s","You may pay the total amount or you")

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
Writefile(L_INVOICE_NAME,"%s%s","can pay in installments with a",Trun(Str(ARSPAYPLAN:INSTALLMENT_CHARGE_RATE,"($$$.99)")))

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
Writefile(L_INVOICE_NAME,"%s","per payment charge.")
End -- added Aug 26, 2003 (DLP)

end -- end of annual pp for arscontrol2:print_failure_on_annual

-- added 08/23/2002 - for flemington
Access ARSCONTROL2, Set ARSCONTROL2:COMPANY_ID = ARSCONTROL:COMPANY_ID
If ARSCONTROL2:INVOICE_FAILURE_LITERAL <> "" Then
Begin
if arsinvwork:payment_plan one of 1 then
begin
    l_V_position = l_v_position + 360
end

    L_V_POSITION = L_V_POSITION + 240
    L_H_POSITION = 260
    Writefile(L_INVOICE_NAME,"%s",L_ARIAL_9)
    Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
    Writefile(L_INVOICE_NAME,"%s",Trun(ARSCONTROL2:INVOICE_FAILURE_LITERAL))
End

End

/* print mortgagee on invoice if found and control file has been set */

If ARSCONTROL:PRINT_MORTGAGEE_ON_INVOICE_HEAD = 1 Or
   ARSCONTROL:PRINT_MORTGAGEE_ON_INVOICE_BODY = 1 Then
Begin
    L_MORT_TYPE = ""
    L_HEAD_PRINT = "Y"
    Do GET_MORT_COPY
    If L_MORT_FOUND One Of "Y" And
       L_MORT_TYPE Not One Of "I" Then
    Begin
         Switch (L_MORT_TYPE)
         Case "B"       : L_MORT_TYPE_STRING = "Payor Information            "
         Case "C"       : L_MORT_TYPE_STRING = "Mortgagee/Payor Information  "
         Case "F"       : L_MORT_TYPE_STRING = "Premium Financing Information"
         Default        : L_MORT_TYPE_STRING = "Mortgagee Information        "
         End
    If ARSCONTROL:PRINT_MORTGAGEE_ON_INVOICE_HEAD = 1 Then
    Begin
         L_V_POSITION = 3840
         L_H_POSITION = 3780
         Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD)
         Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
         Writefile(L_INVOICE_NAME,"%s",L_MORT_TYPE_STRING)

         Writefile(L_INVOICE_NAME,"%s",L_ARIAL_6) -- change from l_arial_8 on 08/12/2002 per JD - FOS

         For L_CTR = 1 To 3
         Begin
         If L_MORT_NAME[L_CTR] <> "" Then
         Begin
             L_V_POSITION = L_V_POSITION + 120
             Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
             Writefile(L_INVOICE_NAME,"%s",L_MORT_NAME[L_CTR])
         End
         End
         For L_CTR = 1 To 3
         Begin
         If L_MORT_ADDRESS[L_CTR] <> "" Then
         Begin
             L_V_POSITION = L_V_POSITION + 120
             Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
             Writefile(L_INVOICE_NAME,"%s",L_MORT_ADDRESS[L_CTR])
         End
         End

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(L_MORT_CITY) + ", " +
                              Trun(L_MORT_STATE) + "  " +
                              Str(Val(L_MORT_ZIPCODE),"99999-9999") + "<NL>")

If L_MORT_TELEPHONE <> "" Then
Begin
    L_V_POSITION = L_V_POSITION + 120
    Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
    Writefile(L_INVOICE_NAME,"%s",Str(Val(L_MORT_TELEPHONE),"(999) 999 - 9999"))
End

         If ARSCONTROL2:PRINT_LOAN_NO_TOP One Of 1 And L_MORT_ACCOUNT <> "" Then
         {
            /**** Account number information here ****/
            L_V_POSITION = L_V_POSITION + 120
            Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
            Writefile(L_INVOICE_NAME,"%s","LOAN NO.: " + L_MORT_ACCOUNT + "<nl>")
        }


End -- end of checking for arscontrol:print_mortgagee_on_head

If ARSCONTROL:PRINT_MORTGAGEE_ON_INVOICE_BODY = 1 Then
Begin
--         L_V_POSITION = 5760
-- per jim d request, move this down 2 lines
         L_V_POSITION = 6000
         L_H_POSITION = 3780
         Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD)
         Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
         Writefile(L_INVOICE_NAME,"%s",L_MORT_TYPE_STRING+"<NL>")

         Writefile(L_INVOICE_NAME,"%s",L_ARIAL_6) -- changed 08/12/2002 per JD - FOS

         For L_CTR = 1 To 3
         Begin
         If L_MORT_NAME[L_CTR] <> "" Then
         Begin
             L_V_POSITION = L_V_POSITION + 120
             Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
             Writefile(L_INVOICE_NAME,"%s",L_MORT_NAME[L_CTR]+"<nl>")
         End
         End
         For L_CTR = 1 To 3
         Begin
         If L_MORT_ADDRESS[L_CTR] <> "" Then
         Begin
             L_V_POSITION = L_V_POSITION + 120
             Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
             Writefile(L_INVOICE_NAME,"%s",L_MORT_ADDRESS[L_CTR]+"<NL>")
         End
         End

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(L_MORT_CITY) + ", " +
                              Trun(L_MORT_STATE) + "  " +
                              Str(Val(L_MORT_ZIPCODE),"99999-9999") + "<NL>")

If L_MORT_TELEPHONE <> "" Then
Begin
    L_V_POSITION = L_V_POSITION + 120
    Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
    Writefile(L_INVOICE_NAME,"%s",Str(Val(L_MORT_TELEPHONE),"(999) 999 - 9999"))
End

         If ARSCONTROL2:PRINT_LOAN_NO_BOTTOM One Of 1 And L_MORT_ACCOUNT <> "" Then
         {
            /**** Account number information here ****/
            L_V_POSITION = L_V_POSITION + 120
            Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)) + "V")
            Writefile(L_INVOICE_NAME,"%s","LOAN NO.: " + L_MORT_ACCOUNT + "<nl>")
         }

End -- end of checking for arscontrol:print_mortgagee_on_body

End  -- end of l_mort_found = "Y" checking

End  -- end of arscontrol:print_mortgagee_on_invoice_head = 1 checking


/* print the fixed literals */
Writefile(L_INVOICE_NAME,"%s",L_ARIAL)

--Writefile(L_INVOICE_NAME,"<033>&a3420h1155V")
Writefile(L_INVOICE_NAME,"<033>&a3420h1155V")
Writefile(L_INVOICE_NAME,"Policy Type:<NL>")
Writefile(L_INVOICE_NAME,"<033>&a3420h1290V")
Writefile(L_INVOICE_NAME,"%s<NL>",SFSLINE:DESCRIPTION)
--Writefile(L_INVOICE_NAME,"<033>&a180h1455V") changed 05/01/2002
Writefile(L_INVOICE_NAME,"<033>&a180h1600V")
Writefile(L_INVOICE_NAME,"Run Date: %d<NL>",TODAYSDATE)
--Writefile(L_INVOICE_NAME,"<033>&a2620h1455V") changed 05/01/2002
Writefile(L_INVOICE_NAME,"<033>&a2620h1600V")
Writefile(L_INVOICE_NAME,"Payment Plan: %s<NL>",ARSPAYPLAN:DESCRIPTION)

Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD)
L_V_POSITION = 1755

Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Trans Eff<NL>")

Writefile(L_INVOICE_NAME,"%s","<033>&a910h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Trans Exp<NL>")

Writefile(L_INVOICE_NAME,"%s","<033>&a2100h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Description")

Writefile(L_INVOICE_NAME,"%s","<033>&a3990h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Due Date<NL>")

Writefile(L_INVOICE_NAME,"%s","<033>&a4920h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Amount Due<NL>")

-- print the company name and address here

Writefile(L_INVOICE_NAME,"%s",L_ARIAL)
L_V_POSITION = 5330

If SFSCOMPANY:USE_OTHER_MAILING = 0 Then -- use the primary address for return address
Begin
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPANY:NAME[1])+"<NL>"+"<CR>")
/* april 23, 2002 - do not print blank lines */
If SFSCOMPANY:NAME[2] <> "" Then
Begin
    L_V_POSITION = L_V_POSITION + 120
    Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
    Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPANY:NAME[2])+"<NL>"+"<CR>")
End
L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPANY:ADDRESS[1])+"<NL>"+"<CR>")
L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPANY:CITY)+", "+
                              Trun(SFSCOMPANY:STR_STATE) +
                              "  " + Str(Val(SFSCOMPANY:STR_ZIPCODE),"99999-9999") + "<NL>")
End
Else If SFSCOMPANY:USE_OTHER_MAILING = 1 Then -- use the optional mailing address
Begin
Access SFSCOMPMAIL, Set SFSCOMPMAIL:COMPANY_ID = SFSCOMPANY:COMPANY_ID
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPMAIL:NAME[1])+"<NL>"+"<CR>")
/* april 23, 2002 - do not print blank lines */
If SFSCOMPMAIL:NAME[2] <> "" Then
Begin
    L_V_POSITION = L_V_POSITION + 120
    Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
    Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPMAIL:NAME[2])+"<NL>"+"<CR>")
End
L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPMAIL:ADDRESS[1])+"<NL>"+"<CR>")
L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSCOMPMAIL:CITY)+", "+
                              Trun(SFSCOMPMAIL:STR_STATE) +
                              "  " + Str(Val(SFSCOMPMAIL:STR_ZIPCODE),"99999-9999") + "<NL>")
End

Writefile (L_INVOICE_NAME,"%s<NL>",L_ARIAL_ITALIC_BOLD_16)
Writefile (L_INVOICE_NAME,"<033>&a2160h0V")
Writefile (L_INVOICE_NAME,"I N V O I C E<nl>")

/* =====================  Insured =========================   */
Writefile (L_INVOICE_NAME,"%s<NL>",L_ARIAL_BOLD)

Writefile(L_INVOICE_NAME,"<033>&a180h90V")
Writefile(L_INVOICE_NAME,"   Insured<NL>")
Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL)
Writefile (L_INVOICE_NAME,"<033>&a180h210V")
Writefile(L_INVOICE_NAME,"%s", Trun(SFSLINE:ALPHA) + Str(Val(Str(ARSINVWORK:POLICY_NO,"ZZZZZZZZZ")))+"<NL>")

L_LOOP_CTR = 0
L_V_POSITION = 210
For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the name
Begin
    If SFPNAME:NAME[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 120
        Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
        I_NAME=SFPNAME:NAME[L_LOOP_CTR]

        Do REVERSE_NAME
        Writefile(L_INVOICE_NAME,"%s",I_REV_NAME + "<NL>")
        i_rev_name = ""
    }
End

For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the address
Begin
    If SFPNAME:ADDRESS[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 120
        Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
        Writefile(L_INVOICE_NAME,"%s",SFPNAME:ADDRESS[L_LOOP_CTR] + "<NL>")
    }
End

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFPNAME:CITY) + ", " +
                              Trun(SFPNAME:STR_STATE) + "  " +
                              Str(Val(SFPNAME:STR_ZIPCODE),"99999-9999") + "<NL>")

/* =====================   AGENT  =========================   */

-- set CAP to 0h0V and set to arial on march 28, 2002
Writefile(L_INVOICE_NAME,"<033>&a0h0V<NL>")
Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL)
Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL_BOLD)
Writefile(L_INVOICE_NAME,"<033>&a3130h90V")
Writefile(L_INVOICE_NAME,"   Agent: %s",Str(ARSINVWORK:AGENT_NO,"ZZZZ")+"<NL>")
Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL)

L_LOOP_CTR = 0
L_V_POSITION = 90
For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the name
Begin
    If SFSAGENT:NAME[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 120
        Writefile(L_INVOICE_NAME,"%s","<033>&a3130h" + Trun(Str(L_V_POSITION)+"V"))
        Writefile(L_INVOICE_NAME,"%s",SFSAGENT:NAME[L_LOOP_CTR] + "<NL>")
    }
End

For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the address
Begin
    If SFSAGENT:ADDRESS[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 120
        Writefile(L_INVOICE_NAME,"%s","<033>&a3130h" + Trun(Str(L_V_POSITION)+"V"))
        Writefile(L_INVOICE_NAME,"%s",SFSAGENT:ADDRESS[L_LOOP_CTR] + "<NL>")
    }
End

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a3130h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFSAGENT:CITY) + ", " +
                              Trun(SFSAGENT:STR_STATE) + "  " +
                              Str(Val(SFSAGENT:STR_ZIPCODE),"99999-9999") + "<NL>")
L_V_POSITION = L_V_POSITION + 120
Writefile (L_INVOICE_NAME,"%s","<033>&a3130h" + Trun(Str(L_V_POSITION) + "V"))
Writefile (L_INVOICE_NAME,"%s",Str(Val(SFSAGENT:TELEPHONE[1]),"(999) 999-9999") + "<NL>")

/* copy literal */

Switch(L_HOLD_COPY_CTR)
    Case 1  : L_COPY_LIT = "Payor's Copy       "
    Case 2  : L_COPY_LIT = "Agent's Copy       "
    Case 3  : L_COPY_LIT = "Home Office Copy   "
    Default : L_COPY_LIT = "Copy               "
End

L_V_POSITION = 0
Writefile (L_INVOICE_NAME,"%s","<033>&a4860h" + Trun(Str(L_V_POSITION) + "V"))
Writefile (L_INVOICE_NAME,"%s<NL>",Trun(L_COPY_LIT))

/* bottom of invoce name and address */

If L_HOLD_COPY_CTR <= 3 Or
   ARSCONTROL:PRINT_PAYOR_ON_AGENTS_COPY  One Of 1 Then
Begin

L_LOOP_CTR = 0
L_V_POSITION = 6390
--L_H_POSITION = 540
-- per JD's need to move 7/16 of inch
L_H_POSITION = 855

/* using new arscontrol file as of 08/13/2002 */
If ARSCONTROL:INVOICE_BOTTOM_V_POSITION <>  0 And
   ARSCONTROL:INVOICE_BOTTOM_H_POSITION <> 0 Then
   Begin
       L_V_POSITION = ARSCONTROL:INVOICE_BOTTOM_V_POSITION
       L_H_POSITION = ARSCONTROL:INVOICE_BOTTOM_H_POSITION
   End

If L_HOLD_COPY_CTR = 1 Or
   ARSCONTROL:PRINT_PAYOR_ON_AGENTS_COPY One Of 1 Then
Begin

For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the name
Begin
    If L_PAYOR_NAME[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 90 --120
        Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
        i_name=""
        I_NAME=L_PAYOR_NAME[L_LOOP_CTR]
        Do REVERSE_NAME
        Writefile(L_INVOICE_NAME,"%s",I_REV_NAME + "<NL>")
        i_rev_name = ""
    }
End

For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the address
Begin
    If L_PAYOR_ADDRESS[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 90 -- 120
        Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
        Writefile(L_INVOICE_NAME,"%s",L_PAYOR_ADDRESS[L_LOOP_CTR] + "<NL>")
    }
End

L_V_POSITION = L_V_POSITION + 90 -- 120
-- Writefile(l_invoice_name,"%s","<033>&a540h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(L_PAYOR_CITY) + ", " +
                              Trun(L_PAYOR_STATE) + "  " +
                              Str(Val(L_PAYOR_ZIPCODE),"99999-9999") + "<NL>")

End -- end of if l_hold_copy_ctr = 1

-- --------------------------------------
Else If L_HOLD_COPY_CTR > 1 And
        L_HOLD_COPY_CTR  <= 3 And
        ARSCONTROL:PRINT_PAYOR_ON_AGENTS_COPY  Not One Of 1 Then
Begin
For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the name
Begin
    If SFPNAME:NAME[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 90 --120
        Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
        I_NAME=SFPNAME:NAME[L_LOOP_CTR]
        Do REVERSE_NAME
        Writefile(L_INVOICE_NAME,"%s",I_REV_NAME + "<NL>")
    }
End

For L_LOOP_CTR = 1 To 3 -- there are 3 subscripts to the address
Begin
    If SFPNAME:ADDRESS[L_LOOP_CTR] <> "" Then
    {
        L_V_POSITION = L_V_POSITION + 90 -- 120
--        Writefile(l_invoice_name,"%s","<033>&a540h" + Trun(Str(L_V_POSITION)+"V"))
        Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
        Writefile(L_INVOICE_NAME,"%s",SFPNAME:ADDRESS[L_LOOP_CTR] + "<NL>")
    }
End

L_V_POSITION = L_V_POSITION + 90 --120
-- Writefile(l_invoice_name,"%s","<033>&a540h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(SFPNAME:CITY) + ", " +
                              Trun(SFPNAME:STR_STATE) + "  " +
                              Str(Val(SFPNAME:STR_ZIPCODE),"99999-9999"))

End -- end of if l_hold_copy_ctr > 1 and <= 3

/* Print policy Number on return Invoice */

L_V_POSITION = 5940
L_H_POSITION = 180

Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Policy Number: <NL>")

L_H_POSITION = L_H_POSITION + 720
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s", Trun(SFSLINE:ALPHA) + Str(Val(Str(ARSINVWORK:POLICY_NO,"ZZZZZZZZZ")))+"<NL>")

End
End

Procedure PRINT_TOTAL_DUE
Begin

L_SFS_CODE = "SFS"
Access SFSDEFAULT, Set SFSDEFAULT:SFS_CODE = L_SFS_CODE
Access ARSCONTROL2, Set ARSCONTROL2:COMPANY_ID = SFSDEFAULT:COMPANY_ID

L_V_POSITION = L_V_POSITION + 240
Writefile(L_INVOICE_NAME,"%s<NL>",L_LETTER_GOTHIC_12)
L_H_POSITION = 2970
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))

If ARSCONTROL2:TOTAL_DUE_LITERAL_FACE <> "" Then
Begin
    Writefile (L_INVOICE_NAME,"%s%s",Trun(ARSCONTROL2:TOTAL_DUE_LITERAL_FACE),"<NL>")
End
Else
Begin
    Writefile(L_INVOICE_NAME,"%s","TOTAL DUE<NL> ")
End

L_H_POSITION = 4590
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s%s",Trun(Str(L_TOTAL_AMOUNT_DUE,"($ZZ,ZZZ,ZZZ.99)")),"<NL>")

Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL_BOLD_14)

/* print the pay this amount field on the bottom on the invoice */
L_V_POSITION = 5310
L_H_POSITION = 3060
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))

Writefile(L_INVOICE_NAME,"%s<NL>",ARSCONTROL:INVOICE_PAY_AMOUNT)

L_H_POSITION = L_H_POSITION + 1440 -- 2.0" to the right
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Str(L_TOTAL_AMOUNT_DUE,"($ZZ,ZZZ,ZZZ.99)"))
--Writefile(L_INVOICE_NAME,"%s<NL>",Str(ARSINVWORK:NET_AMOUNT_DUE,"($ZZ,ZZZ,ZZZ.99)"))

-- print run date at the bottom of the invoice

If ARSCONTROL2:PRINT_RUN_DATE_ON_INVOICE One Of 1 Then
Begin
    Writefile (L_INVOICE_NAME,"%s<NL>",L_ARIAL_8)
    L_V_POSITION = ARSCONTROL2:DATE_ON_INVOICE_V_POSITION
    L_H_POSITION = ARSCONTROL2:DATE_ON_INVOICE_H_POSITION
    Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
    Writefile(L_INVOICE_NAME,"%s<NL>",Str(TODAYSDATE,"MM/DD/YYYY"))
End

-- new OCR printing on the bottom of the invoice

-- house cleaning
l_check_scan_policy_no          = ""
l_check_scan_due_date           = ""
l_check_scan_due_date           = ""
l_check_scan_total_due          = ""
l_check_scan_check_digit        = ""
l_check_scan_line               = ""
l_check_scan_amount             = 0
l_check_digit_weight            = 0
l_check_digit_total             = 0

for l_check_digit_sub = 1 to 100
begin
   l_check_digit_amount[l_check_digit_sub] = 0
end

/*  end of house cleaning */

if arscontrol2:check_scan one of 1 then
begin
   l_v_position = arscontrol2:check_scan_v_position
   l_h_position = arscontrol2:check_scan_h_position

   if arscontrol2:check_scan_policy_no one of 1 then
   begin
       l_check_scan_policy_no = str(arsinvwork:policy_no,"999999999")
   end
   else
   begin
       l_check_scan_policy_no = ""
   end

   if arscontrol2:check_scan_due_date one of 1 then
   begin
       l_check_scan_due_date = str(arsinvwork:due_date,"MMDDYYYY")
   end
   else
   begin
       l_check_scan_due_date = ""
   end

   if arscontrol2:check_scan_current_due one of 1 then
   begin
       l_check_scan_amount      = l_total_amount_due * 100
       l_check_scan_current_due = str(l_check_scan_amount,"99999999")
       l_check_scan_amount      = 0
   end
   else
   begin
       l_check_scan_due_date = ""
   end

   if arscontrol2:check_scan_total_due one of 1 then
   begin
       l_check_scan_amount    = l_total_annual_net * 100
       l_check_scan_total_due = str(l_check_scan_amount,"99999999")
       l_check_scan_amount    = 0
   end
   else
   begin
       l_check_scan_total_due = ""
   end

l_check_scan_line = l_check_scan_policy_no   +
                    l_check_scan_due_date    +
                    l_check_scan_current_due +
                    l_check_scan_total_due

/* calculate the check digit here */
for l_check_digit_sub = 1 to len(l_check_scan_line)
begin
   l_check_digit_weight = (l_check_digit_sub mod arscontrol2:check_digit_weight) + 1
   l_check_digit_amount[l_check_digit_sub] =
   val(l_check_scan_line[l_check_digit_sub]) * l_check_digit_weight
end

for l_check_digit_sub = 1 to len(l_check_scan_line)
begin
   l_check_digit_total = l_check_digit_total +
                         l_check_digit_amount[l_check_digit_sub]
end

l_check_digit_number = (l_check_digit_total div arscontrol2:check_digit_divisor)
l_check_digit_raw  = l_check_digit_number * arscontrol2:check_digit_divisor
l_check_digit_final = l_check_digit_total - l_check_digit_raw

l_check_digit_final_str = str(l_check_digit_final,"999")
l_check_scan_line = trun(l_check_scan_line) + l_check_digit_final_str


/* write ("<014>")
write ("%c%s%n",01001,"final                 = ",l_check_digit_final)
write ("%c%s%n",03001,"check digit total     = ",l_check_digit_total)
write ("%c%s%n",05001,"check digit raw       = ",l_check_digit_raw)
write ("%c%s%s",07001,"check digit final str = ",l_check_digit_final_str)
Read (23,1,"Press Enter to Continue ",L_ENTER,1)
*/

-- removed <NL> after the %s - testing this

Writefile(L_INVOICE_NAME,"%s",L_pop)
Writefile(L_INVOICE_NAME,"%s",L_ocr_a)
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",trun(l_check_scan_line))
Writefile(L_INVOICE_NAME,"%s",L_push)
--Writefile(L_INVOICE_NAME,"%s<NL>",L_arial_12)

end -- end of check_scan switch

End

Procedure PRINT_DETAIL_LINE
Begin

L_TOTAL_AMOUNT_DUE = 0
I_NAME = SFPNAME:NAME[1]

Include "sfsrevname7.pro"

Writefile(L_INVOICE_NAME,"%s<NL>",L_LETTER_GOTHIC_12)

Access ARSINVWORK_ALIAS, Set ARSINVWORK_ALIAS:COMPANY_ID = ARSINVWORK:COMPANY_ID,
                             ARSINVWORK_ALIAS:POLICY_NO  = ARSINVWORK:POLICY_NO, Approximate

While ARSINVWORK_ALIAS:COMPANY_ID = ARSINVWORK:COMPANY_ID And
      ARSINVWORK_ALIAS:POLICY_NO  = ARSINVWORK:POLICY_NO
      Begin

Switch(ARSINVWORK_ALIAS:TRANS_CODE)
    Case 10,60     : L_TRANSACTION = "New Policy     "
    Case 11,61     : L_TRANSACTION = "Cancellation   "
    Case 12,13,62,63  : L_TRANSACTION = "Endorsement    "
    Case 14,64     : L_TRANSACTION = "Renewal        "
    Case 15,65     : L_TRANSACTION = "Audit Premium  "
    Case 16,66     : L_TRANSACTION = "Reinstatement  "
    Case 18,28,68  : L_TRANSACTION = "Transaction    "
    Case 19,22,23,29,69 :
                  L_TRANSACTION = "Transaction    "
    Default     : L_TRANSACTION = "Transaction    "
End

If ARSINVWORK:PAYMENT_PLAN <> 1 Then
Begin
    L_TRANSACTION = Trun(L_TRANSACTION) + " - Installment # " + Str(ARSINVWORK_ALIAS:BILLING_CTR,"ZZZZ")
End
Else
-- march 17, 2002
-- annual policies should not note which installment #
If ARSINVWORK:PAYMENT_PLAN = 1 Then -- annual payment
Begin
   L_TRANSACTION = "Annual Policy Premium"
End

If ARSINVWORK:TRANS_CODE One Of 12,13,22,23 Then
Begin
    L_TRANSACTION = "Endorsement"
End
If ARSINVWORK_ALIAS:PAST_DUE = "Y" Then
Begin
    L_TRANSACTION = "Amount is Past Due "
End

If G_TRANS_CODE = 12 Or
   G_TRANS_CODE = 13 Then
   Begin
       L_TRANSACTION = "Endorsement "
   End

If ARSINVWORK_ALIAS:TRANS_TYPE = "P" Then
Begin
    L_TRANSACTION = "Payment Received " + "- Check No. " + Trun(ARSINVWORK_ALIAS:CHECK_NO)
End
Else If ARSINVWORK_ALIAS:TRANS_TYPE = "R" Then
Begin
    L_TRANSACTION = "Re-bill for Returned Check " + "- Check No. " + Trun(ARSINVWORK_ALIAS:CHECK_NO)
End
Else If ARSINVWORK_ALIAS:TRANS_TYPE = "X" Then
Begin
    L_TRANSACTION = "Returned Check Charge "
End

L_V_POSITION = L_V_POSITION + 120

-- If ARSINVWORK_ALIAS:TRANS_TYPE  "I" Then
If ARSINVWORK_ALIAS:TRANS_TYPE One Of "I", "R", "X" Then
Begin
   L_TOTAL_AMOUNT_DUE = L_TOTAL_AMOUNT_DUE + ARSINVWORK_ALIAS:NET_AMOUNT_DUE
End

If ARSINVWORK_ALIAS:TRANS_TYPE One Of "I" Then
Begin
Writefile(L_INVOICE_NAME,"%s","<033>&a210h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:EFF_DATE,"MM/DD/YYYY")))
Writefile(L_INVOICE_NAME,"%s","<033>&a930h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:EXP_DATE,"MM/DD/YYYY")))
Writefile(L_INVOICE_NAME,"%s","<033>&a1620h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",L_TRANSACTION)
Writefile(L_INVOICE_NAME,"%s","<033>&a4000h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:DUE_DATE,"MM/DD/YYYY")))
Writefile(L_INVOICE_NAME,"%s","<033>&a4590h" + Trun(Str(L_V_POSITION) + "V"))
--Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:NET_AMOUNT_DUE,"($ZZ,ZZZ,ZZZ.99)")))

If ARSINVWORK_ALIAS:BILLING_CTR = 1 And
   ARSINVWORK_ALIAS:PAST_DUE  <> "Y" Then
Begin
    Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:INSTALLMENT_AMOUNT + ARSINVWORK_ALIAS:INSTALLMENT_CHARGE,"($ZZ,ZZZ,ZZZ.99)")))
End
Else
Begin
    Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(((ARSINVWORK_ALIAS:INSTALLMENT_AMOUNT + ARSINVWORK_ALIAS:INSTALLMENT_CHARGE)-ARSINVWORK_ALIAS:TOTAL_AMOUNT_PAID),"($ZZ,ZZZ,ZZZ.99)")))
End
End

If ARSINVWORK_ALIAS:TRANS_TYPE One Of "R","X" Then
Begin
Writefile(L_INVOICE_NAME,"%s","<033>&a210h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:BILLED_DATE,"MM/DD/YYYY")))
Writefile(L_INVOICE_NAME,"%s","<033>&a930h" + Trun(Str(L_V_POSITION) + "V"))
--Writefile(L_INVOICE_NAME,"%s<NL>",Trun(ARSINVWORK_ALIAS:CHECK_NO))
--Writefile(L_INVOICE_NAME,"%s","<033>&a1620h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",L_TRANSACTION)
Writefile(L_INVOICE_NAME,"%s","<033>&a4590h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:NET_AMOUNT_DUE,"($ZZ,ZZZ,ZZZ.99)")))
End

-- if this is the first invoice and there is a deposit premium
-- then show the check information, otherwise do not print
-- any check information
If ARSINVWORK_ALIAS:TRANS_TYPE One Of "P" And
   ARSINVWORK_ALIAS:BILLING_CTR = 0 And
   G_TRANS_CODE One Of 10,14 Then
--   ARSINVWORK_ALIAS:TRANS_CODE One Of 10  Then
Begin

Writefile(L_INVOICE_NAME,"%s","<033>&a210h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:BILLED_DATE,"MM/DD/YYYY")))
Writefile(L_INVOICE_NAME,"%s","<033>&a930h" + Trun(Str(L_V_POSITION) + "V"))
--Writefile(L_INVOICE_NAME,"%s<NL>",Trun(ARSINVWORK_ALIAS:CHECK_NO))
--Writefile(L_INVOICE_NAME,"%s","<033>&a1620h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",L_TRANSACTION)
Writefile(L_INVOICE_NAME,"%s","<033>&a4590h" + Trun(Str(L_V_POSITION) + "V"))
Writefile(L_INVOICE_NAME,"%s<NL>",Trun(Str(ARSINVWORK_ALIAS:INSTALLMENT_AMOUNT,"($ZZ,ZZZ,ZZZ.99)")))
End

L_LINES_PRINTED = L_LINES_PRINTED + 1
If L_LINES_PRINTED >= 29 Then
{
   Do EJECT_PAGE
   Do PRINT_FORM
   L_LINES_PRINTED = 0
   L_PAGES_CTR = L_PAGES_CTR + 1
   L_V_POSITION = 1800
}

Next ARSINVWORK_ALIAS

End

--L_V_POSITION = 5310
--L_H_POSITION = 4500
--Writefile(L_INVOICE_NAME,"%s<NL>",L_ARIAL_BOLD_14)
--Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
--Writefile(L_INVOICE_NAME,"%s<NL>",Str(L_TOTAL_AMOUNT_DUE,"($ZZ,ZZZ,ZZZ.99)"))

End

Procedure PRINT_POLICY_INSTALLMENTS
Begin

L_FUTURE_TOTAL_DUE = 0

/* draw the box around the form */

     -- left and right verticle lines --          2900 replaced by 3050
     -- was 2900

--Writefile (L_INVOICE_NAME,"%s<NL>",L_LEDUP)
--Writefile (L_INVOICE_NAME,"%s",L_FORMFEED)
Writefile (L_INVOICE_NAME,"<FF>")

--Writefile(L_INVOICE_NAME,"<033>&a0h0V<NL>") --CAP
--Do EJECT_PAGE
--    Writefile(L_INVOICE_NAME,"%s",L_FORMFEED+"<NL>")
--Writefile (L_INVOICE_NAME,"<033>&l0H")
--    Writefile(L_INVOICE_NAME,"%s",L_RESET + "<NL>")

-- 09/15/2006 - because OCR was being used
Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD)

Writefile(L_INVOICE_NAME,"<033>&a0h0V<NL>") --CAP
Writefile(L_INVOICE_NAME,"<033>&a90h0V<033>*c5a3000b0P<NL>")
Writefile(L_INVOICE_NAME,"<033>&a5670h0V<033>*c5a3000b0P")
Writefile(L_INVOICE_NAME,"<033>&a0h0V<NL>") -- CAP

     -- top and bottom horizontal lines --
Writefile(L_INVOICE_NAME,"<033>&a90h0V<033>*c5580h5v0P<NL>")
-- was 6960
Writefile(L_INVOICE_NAME,"<033>&a90h7200V<033>*c5580h5v0P")
Writefile(L_INVOICE_NAME,"<033>&a0h0V<NL>") -- CAP

Writefile(L_INVOICE_NAME,"<033>&a1750h150V")
Writefile(L_INVOICE_NAME,"Future Installments for Your Policy")

Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD)

/* draw lines within the form */
Writefile(L_INVOICE_NAME,"<033>&a90h300V<033>*c5580h5v0P<NL>") -- 2nd line
Writefile(L_INVOICE_NAME,"<033>&a90h480V<033>*c5580h5v0P<NL>") -- 3rd line
-- was 5390
Writefile(L_INVOICE_NAME,"<033>&a90h5040V<033>*c5580h5v0P<NL>") -- 4th line
Writefile(L_INVOICE_NAME,"<033>&a90h300V<033>*c2325a75b5g2P<NL>") -- shading

/* draw small verticle lines in headings */
Writefile(L_INVOICE_NAME,"<033>&a810h300V<033>*c5a80b0P<NL>")  -- 1st line
Writefile(L_INVOICE_NAME,"<033>&a1530h300V<033>*c5a80b0P<NL>") -- 2nd line
Writefile(L_INVOICE_NAME,"<033>&a3780h300V<033>*c5a80b0P<NL>") -- 3rd line
Writefile(L_INVOICE_NAME,"<033>&a4680h300V<033>*c5a80b0P<NL>") -- 4th line

/* draw separator line between credit payments and change of address */
Writefile(L_INVOICE_NAME,"<033>&a2880h5040V<033>*c5a900b0P")

/* print the change of address information first */

L_H_POSITION = 720
L_V_POSITION = 5220
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Change of Address<NL>")

Writefile(L_INVOICE_NAME,"%s",L_LETTER_GOTHIC_10)

L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Policy No.: %s", Trun(SFSLINE:ALPHA) + Str(Val(Str(ARSINVWORK:POLICY_NO,"ZZZZZZZZZ")))+"<NL>")

L_H_POSITION = 720
L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Your New Address is:<NL>")

L_H_POSITION = 180

For L_CTR = 1 To 6
Begin
L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c2665h5v0P<NL>")
End

L_H_POSITION = 180
L_V_POSITION = L_V_POSITION + 240
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Phone No.:")
L_H_POSITION = L_H_POSITION + 720
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c1845h5v0P<NL>")

/* end of change of address form */

/* print the credit slip information first */

If ARSCONTROL:PRINT_CREDIT_SLIP_ON_INVOICE = 1 Then
Begin

Writefile(L_INVOICE_NAME,"%s",L_ARIAL_BOLD)

L_H_POSITION = 3060
L_V_POSITION = 5220
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Credit Card Payment Slip (Visa / Mastercard)<NL>")

Writefile(L_INVOICE_NAME,"%s",L_LETTER_GOTHIC_10)

L_H_POSITION = 3060
L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"%s",Trun(ARSCONTROL:INVOICE_PAYMENT_OPTIONS))

L_H_POSITION = 3060
L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Credit Card Number")

L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c2485h5v0P<NL>")

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Expiration Date")

L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c2485h5v0P<NL>")

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Name as it Appears on the Card")

L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c2485h5v0P<NL>")

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Cardholder's Signature")

L_V_POSITION = L_V_POSITION + 240
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c2485h5v0P<NL>")

L_V_POSITION = L_V_POSITION + 120
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Phone Number:")

L_V_POSITION = L_V_POSITION + 90
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h"
                 + Trun(Str(L_V_POSITION)) + "V" + "<033>*c2485h5v0P<NL>")

L_V_POSITION = L_V_POSITION + 180
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Full Annual Premium")
writefile(l_invoice_name,"%s",str(arsinvwork:total_annual,"$$$,$$$.99-"))

End
/* end of credit Payment */

L_V_POSITION = 420

Writefile(L_INVOICE_NAME,"%s","<033>&a180h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Trans Eff<NL>")

Writefile(L_INVOICE_NAME,"%s","<033>&a910h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Trans Exp<NL>")

Writefile(L_INVOICE_NAME,"%s","<033>&a2100h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Description")

Writefile(L_INVOICE_NAME,"%s","<033>&a3990h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Due Date<NL>")

Writefile(L_INVOICE_NAME,"%s","<033>&a4920h" + Trun(Str(L_V_POSITION)+"V"))
Writefile(L_INVOICE_NAME,"Amount Due<NL>")

Writefile(L_INVOICE_NAME,"%s",L_LETTER_GOTHIC_12)

L_H_POSITION = 0
L_V_POSITION = L_V_POSITION + 60
L_FUTURE_TOTAL_DUE = 0.00

Access ARSINVWORK2, Set ARSINVWORK2:COMPANY_ID = ARSINVWORK:COMPANY_ID,
                        ARSINVWORK2:POLICY_NO  = ARSINVWORK:POLICY_NO, Approximate

While ARSINVWORK2:COMPANY_ID = ARSINVWORK:COMPANY_ID And
      ARSINVWORK2:POLICY_NO  = ARSINVWORK:POLICY_NO
      Begin

      Access ARSCONTROL2, Set ARSCONTROL2:COMPANY_ID = ARSINVWORK2:COMPANY_ID

      L_FUTURE_TOTAL_DUE = L_FUTURE_TOTAL_DUE + ARSINVWORK2:INSTALLMENT_AMOUNT
      L_H_POSITION = 180
      L_V_POSITION = L_V_POSITION + 120
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
      Writefile(L_INVOICE_NAME,"%s<NL>",Str(ARSINVWORK2:TRANS_EFF,"MM/DD/YYYY"))

      L_H_POSITION = 910
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
      Writefile(L_INVOICE_NAME,"%s<NL>",Str(ARSINVWORK2:TRANS_EXP,"MM/DD/YYYY"))

      L_H_POSITION = 2100
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
      Writefile(L_INVOICE_NAME,"    Installment<NL>")

      L_H_POSITION = 3999
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
      Writefile(L_INVOICE_NAME,"%s<NL>",Str(ARSINVWORK2:RDUE_DATE,"MM/DD/YYYY"))

      L_H_POSITION = 4920
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
      L_FUTURE_AMOUNT_DUE = ARSINVWORK2:INSTALLMENT_AMOUNT
      Writefile(L_INVOICE_NAME,"%s<NL>",Str(L_FUTURE_AMOUNT_DUE,"$ZZZ,ZZZ.99-"))

      Next ARSINVWORK2

      End

L_SFS_CODE = "SFS"
Access SFSDEFAULT, Set SFSDEFAULT:SFS_CODE = L_SFS_CODE
Access ARSCONTROL2, Set ARSCONTROL2:COMPANY_ID = SFSDEFAULT:COMPANY_ID

      L_V_POSITION = L_V_POSITION + 240
      Writefile(L_INVOICE_NAME,"%s<NL>",L_LETTER_GOTHIC_12)
      L_H_POSITION = 2970
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))

      If ARSCONTROL2:TOTAL_BALANCE_LIT <> "" Then
      Begin
          Writefile(L_INVOICE_NAME,"%s%s",Trun(ARSCONTROL2:TOTAL_BALANCE_LIT),"<nl>")
      End
      Else
      Begin
          Writefile(L_INVOICE_NAME,"%s","TOTAL BALANCE DUE<NL> ")
      End

      L_H_POSITION = 4920
      Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
      Writefile(L_INVOICE_NAME,"%s<NL>",Str(L_FUTURE_TOTAL_DUE,"$ZZZ,ZZZ.99-"))


L_V_POSITION = L_V_POSITION + 240
L_H_POSITION = 740 -- was 1140
Writefile(L_INVOICE_NAME,"%s","<033>&a" + Trun(Str(L_H_POSITION)) + "h" + Trun(Str(L_V_POSITION)+"V"))
--Writefile(L_INVOICE_NAME,"%s%s%s","Future Installments Do not Include the ",Str(ARSPAYPLAN:INSTALLMENT_CHARGE_RATE,"$$.99")," Per Installment Charge")
Writefile(L_INVOICE_NAME,"%s%s%s","The above future installments do not reflect the ",Str(ARSPAYPLAN:INSTALLMENT_CHARGE_RATE,"$$.99")," Per Installment Charge")

End   -- end of print policy installments


Procedure EJECT_PAGE
Begin

-- put reset first on march 28, 2002
--    Writefile(L_INVOICE_NAME,"%s",L_RESET + "<NL>")
    Writefile(L_INVOICE_NAME,"%s",L_FORMFEED+"<NL>")
--    Writefile(L_INVOICE_NAME,"%s",L_RESET + "<NL>")

    -- set to long edge duplexing if the following is true
    If ARSCONTROL:PRINT_FUTURE_INSTALLMENTS = 1 Or
       ARSCONTROL:PRINT_CREDIT_SLIP_ON_INVOICE = 1 Then
       Begin
           Writefile (L_INVOICE_NAME,"%s<NL>",L_LEDUP)
       End

-- options are:
--     1 = Executive
--     2 = Letter
--     3 = Legal
--     4 = A4
--     5 = Monarch
--     6 = Commercial 10
--     7 = International DL
--     8 = International C5

-- dont set form type march 28, 2002
--Writefile(L_INVOICE_NAME,"<033>&l2A")   -- set the printer to Letter, see above

    L_PAGES_CTR = L_PAGES_CTR + 1

End

Procedure REVERSE_NAME
Begin

Include "sfsrevname7.pro"

End

Procedure ADD_ARSINVWORK
Begin

L_TOTAL_ANNUAL = 0

L_TRANS_TYPE = "I"
If ARSBILLING:TRANS_CODE = ARSCONTROL:RETURNED_CHECK_REBILL_TRANS Then
Begin
   L_TRANS_TYPE = "R"
End
Else If ARSBILLING:TRANS_CODE = ARSCONTROL:RETURNED_CHECK_TRANS_CODE Then
Begin
   L_TRANS_TYPE = "X"
End

L_PAYMENT_CTR = 1 -- for this type always 1, only increments for checks
L_MAXIMUM_BILLING_CTR = 0

Access ARSINVWORK, Set ARSINVWORK:COMPANY_ID  = ARSBILLING:COMPANY_ID,
                       ARSINVWORK:POLICY_NO   = ARSBILLING:POLICY_NO,
                       ARSINVWORK:DUE_DATE    = ARSBILLING:DUE_DATE,
                       ARSINVWORK:TRANS_TYPE  = L_TRANS_TYPE,
                       ARSINVWORK:PAYMENT_CTR = L_PAYMENT_CTR, Approximate


If ARSINVWORK:COMPANY_ID  <> ARSBILLING:COMPANY_ID Or
   ARSINVWORK:POLICY_NO   <> ARSBILLING:POLICY_NO Or
   ARSINVWORK:DUE_DATE    <> ARSBILLING:DUE_DATE Or
   ARSINVWORK:TRANS_TYPE  <> L_TRANS_TYPE Or
   ARSINVWORK:PAYMENT_CTR <> L_PAYMENT_CTR Then
   Begin
   Add ARSINVWORK
   Begin
       ARSINVWORK:COMPANY_ID            = ARSBILLING:COMPANY_ID
       ARSINVWORK:POLICY_NO             = ARSBILLING:POLICY_NO
       ARSINVWORK:TRANS_TYPE            = L_TRANS_TYPE
       ARSINVWORK:DUE_DATE              = ARSBILLING:DUE_DATE
       ARSINVWORK:PAYMENT_CTR           = L_PAYMENT_CTR
       ARSINVWORK:STATUS                = ARSBILLING:STATUS
       ARSINVWORK:BILLED_DATE           = TODAYSDATE
       ARSINVWORK:EFF_DATE              = ARSBILLING:TRANS_EFF
       ARSINVWORK:EXP_DATE              = ARSBILLING:TRANS_EXP
       ARSINVWORK:TRANS_CODE            = ARSBILLING:TRANS_CODE
       ARSINVWORK:BILLING_CTR           = ARSBILLING:BILLING_CTR
       If ARSBILLING:BILLING_CTR > L_MAXIMUM_BILLING_CTR Then
       Begin
           L_MAXIMUM_BILLING_CTR = ARSBILLING:BILLING_CTR
       End

       If ARSBILLING:TRANS_CODE One Of 10,11,12,13,14,15,16,19,22,21,23,29,50 Then
       Begin
       ARSINVWORK:INSTALLMENT_AMOUNT    = ARSBILLING:INSTALLMENT_AMOUNT
       End
       Else
       Begin
       ARSINVWORK:INSTALLMENT_AMOUNT    = 0.00
       End

       If ARSBILLING:TRANS_CODE One Of 18, 28 Then
       Begin
           ARSINVWORK:INSTALLMENT_CHARGE    = ARSBILLING:INSTALLMENT_AMOUNT
       End
       Else
       Begin
           ARSINVWORK:INSTALLMENT_CHARGE    = 0.00
       End

       ARSINVWORK:TOTAL_AMOUNT_PAID     = ARSBILLING:TOTAL_AMOUNT_PAID
       ARSINVWORK:WRITE_OFF_AMOUNT      = ARSBILLING:WRITE_OFF_AMOUNT
       ARSINVWORK:NET_AMOUNT_DUE        = (ARSBILLING:INSTALLMENT_AMOUNT +
                                           ARSBILLING:INSTALLMENT_CHARGE -
                                          (ARSBILLING:TOTAL_AMOUNT_PAID +
                                           ARSBILLING:WRITE_OFF_AMOUNT))

       If ARSBILLING:TRANS_CODE One Of 10, 14, 16 Then
       Begin
           Do GET_TOTAL_ANNUAL
       End
       Else
       Begin
           L_TOTAL_ANNUAL = 0
       End

       If G_TRANS_CODE One Of 12,13 Then
       Begin
           L_TOTAL_ANNUAL = 0
       End

       ARSINVWORK:TOTAL_ANNUAL          = L_TOTAL_ANNUAL
       ARSINVWORK:PAST_DUE              = "N"
       ARSINVWORK:PAYMENT_PLAN          = ARSBILLING:PAYMENT_PLAN
       ARSINVWORK:AGENT_NO              = ARSBILLING:AGENT_NO
       ARSINVWORK:LINE_OF_BUSINESS      = ARSBILLING:LINE_OF_BUSINESS
       ARSINVWORK:LOB_SUBLINE           = ARSBILLING:LOB_SUBLINE
       ARSINVWORK:COMM_RATE             = ARSBILLING:COMM_RATE
       ARSINVWORK:RETURN_CHECK_CTR      = ARSBILLING:RETURN_CHECK_CTR
       ARSINVWORK:CHECK_NO              = ARSBILLING:CHECK_NO
-- was arsbilling:due_date < g_starting_date
-- this was wrong as an advanced due date would be considered past due
       If ARSBILLING:DUE_DATE < TODAYSDATE Then
       Begin
           ARSINVWORK:PAST_DUE          = "Y"
       End
       Else
       Begin
           ARSINVWORK:PAST_DUE          = "N"
       End
   End
   End
   Else
   Change ARSINVWORK
   Begin
-- 02/10/2002 - if there was an endorsement done the same day as the
--  renewal was done then there would be no amount accumulated
   If ARSBILLING:TRANS_CODE One Of 10, 14, 16 Then
   Begin
       Do GET_TOTAL_ANNUAL
       ARSINVWORK:TOTAL_ANNUAL = L_TOTAL_ANNUAL
   End
   If ARSBILLING:TRANS_CODE One Of 10,11,12,13,14,15,16,19,22,23,29 Then
   Begin
       ARSINVWORK:INSTALLMENT_AMOUNT    = ARSINVWORK:INSTALLMENT_AMOUNT +
                                          ARSBILLING:INSTALLMENT_AMOUNT
   End
   -- added 2/10/2002 - if an endorsement and 14 were done on the same day
   -- then the invoice would refect the endorsement not the 14
   If ARSBILLING:TRANS_CODE One Of 10, 14 Then
   Begin
       ARSINVWORK:TRANS_CODE = ARSBILLING:TRANS_CODE
   End
   Else
   If ARSBILLING:TRANS_CODE One Of 18,28 Then
   Begin
       ARSINVWORK:INSTALLMENT_CHARGE    = ARSINVWORK:INSTALLMENT_CHARGE +
                                          ARSBILLING:INSTALLMENT_AMOUNT
   End
       ARSINVWORK:TOTAL_AMOUNT_PAID     = ARSINVWORK:TOTAL_AMOUNT_PAID +
                                          ARSBILLING:TOTAL_AMOUNT_PAID
       ARSINVWORK:WRITE_OFF_AMOUNT      = ARSINVWORK:WRITE_OFF_AMOUNT +
                                          ARSBILLING:WRITE_OFF_AMOUNT
       ARSINVWORK:NET_AMOUNT_DUE        = ARSINVWORK:NET_AMOUNT_DUE +
                                         (ARSBILLING:INSTALLMENT_AMOUNT +
                                          ARSBILLING:INSTALLMENT_CHARGE -
                                         ( ARSBILLING:TOTAL_AMOUNT_PAID +
                                          ARSBILLING:WRITE_OFF_AMOUNT))
-- dlp - 09/16/2003 -
-- force the billing_ctr to be the last billing ctr encountered to properly
-- display the type of invoice to be printed.
   ARSINVWORK:BILLING_CTR = ARSBILLING:BILLING_CTR
   End

End -- end of procedure

Procedure BUILD_INVOICE_WORK_FILE2
Begin

L_WORK_HOLD_POLICY_NO = 0

Access ARSINVWORK_ALIAS, Set ARSINVWORK_ALIAS:COMPANY_ID = ARSCONTROL:COMPANY_ID, Approximate

While ARSINVWORK_ALIAS:COMPANY_ID = ARSCONTROL:COMPANY_ID
Begin

If L_WORK_HOLD_POLICY_NO <> ARSINVWORK_ALIAS:POLICY_NO Then
Begin

L_WORK_HOLD_POLICY_NO = ARSINVWORK_ALIAS:POLICY_NO

Access ARSBILLING, Set ARSBILLING:COMPANY_ID = ARSINVWORK_ALIAS:COMPANY_ID,
                       ARSBILLING:POLICY_NO  = ARSINVWORK_ALIAS:POLICY_NO, Approximate

While ARSBILLING:COMPANY_ID = ARSINVWORK_ALIAS:COMPANY_ID And
      ARSBILLING:POLICY_NO  = ARSINVWORK_ALIAS:POLICY_NO
Begin

If ARSBILLING:STATUS = "O" Then
Begin

L_REVERSE_DATE = ARSBILLING:DUE_DATE

    Access ARSINVWORK2, Set ARSINVWORK2:COMPANY_ID = ARSBILLING:COMPANY_ID,
                            ARSINVWORK2:POLICY_NO  = ARSBILLING:POLICY_NO,
                            ARSINVWORK2:RDUE_DATE  = L_REVERSE_DATE

    If ARSINVWORK2:COMPANY_ID <> ARSBILLING:COMPANY_ID Or
       ARSINVWORK2:POLICY_NO  <> ARSBILLING:POLICY_NO Or
       ARSINVWORK2:RDUE_DATE  <> L_REVERSE_DATE Then
       Begin
       Add ARSINVWORK2
       Begin
       ARSINVWORK2:COMPANY_ID           = ARSBILLING:COMPANY_ID
       ARSINVWORK2:POLICY_NO            = ARSBILLING:POLICY_NO
       ARSINVWORK2:RDUE_DATE            = L_REVERSE_DATE
       ARSINVWORK2:TRANS_EFF            = ARSBILLING:TRANS_EFF
       ARSINVWORK2:TRANS_EXP            = ARSBILLING:TRANS_EXP
       ARSINVWORK2:TRANS_CODE           = ARSBILLING:TRANS_CODE
       ARSINVWORK2:INSTALLMENT_AMOUNT   = ARSBILLING:INSTALLMENT_AMOUNT -
                                         (ARSBILLING:TOTAL_AMOUNT_PAID +
                                          ARSBILLING:WRITE_OFF_AMOUNT)
       End
       End
       Else
       Begin
       Change ARSINVWORK2
       Begin
       ARSINVWORK2:INSTALLMENT_AMOUNT = ARSINVWORK2:INSTALLMENT_AMOUNT +
       (ARSBILLING:INSTALLMENT_AMOUNT - (ARSBILLING:TOTAL_AMOUNT_PAID +
                                               ARSBILLING:WRITE_OFF_AMOUNT))
       End

       End

       End

       Next ARSBILLING

       End

       End

       Next ARSINVWORK_ALIAS

       End

End

Procedure UPDATE_ARSBILLING
Begin

Access ARSPAYPLAN, Set ARSPAYPLAN:COMPANY_ID       = ARSBILLING:COMPANY_ID,
                       ARSPAYPLAN:LINE_OF_BUSINESS = ARSBILLING:LINE_OF_BUSINESS,
                       ARSPAYPLAN:PAYMENT_PLAN     = ARSBILLING:PAYMENT_PLAN

If L_CREATED_INSTALLMENT_CHARGE Not One Of 1 Then
Begin
    L_CREATED_INSTALLMENT_CHARGE = 1
    If (ARSPAYPLAN:INSTALLMENT_CHARGE_RATE <> 0 And
        ARSBILLING:TRANS_CODE One Of 10,14,16 And
        ARSBILLING:BILLING_CTR > 1 And
        ARSBILLING:STATUS One Of "O") Or
       (ARSPAYPLAN:INSTALLMENT_CHARGE_RATE <> 0 And
        ARSBILLING:TRANS_CODE One Of 10,14,16 And
        ARSBILLING:BILLING_CTR = 1 And
        G_RUN_MODE = 6) Then -- first one is done in arsup001
    Begin
       Do CREATE_INSTALLMENT_CHARGE
    End
End -- end of checking for installment charge already created

Access ARSBILLING_ALIAS, Set ARSBILLING_ALIAS:COMPANY_ID = ARSBILLING:COMPANY_ID,
                             ARSBILLING_ALIAS:POLICY_NO  = ARSBILLING:POLICY_NO,
                             ARSBILLING_ALIAS:TRANS_DATE = ARSBILLING:TRANS_DATE,
                             ARSBILLING_ALIAS:TRANS_EFF  = ARSBILLING:TRANS_EFF,
                             ARSBILLING_ALIAS:TRANS_EXP  = ARSBILLING:TRANS_EXP,
                             ARSBILLING_ALIAS:TRANS_CODE = ARSBILLING:TRANS_CODE,
                             ARSBILLING_ALIAS:LINE_OF_BUSINESS = ARSBILLING:LINE_OF_BUSINESS,
                             ARSBILLING_ALIAS:COMM_RATE  = ARSBILLING:COMM_RATE,
                             ARSBILLING_ALIAS:SUB_CODE   = ARSBILLING:SUB_CODE,
                             ARSBILLING_ALIAS:BILLING_CTR = ARSBILLING:BILLING_CTR,
                             ARSBILLING_ALIAS:RETURN_CHECK_CTR = ARSBILLING:RETURN_CHECK_CTR

If ARSBILLING_ALIAS:STATUS = "O" Or
  (ARSBILLING_ALIAS:STATUS One Of "B", "O" And
   G_RUN_MODE = 2) Then
Begin
Change ARSBILLING_ALIAS
Begin
    ARSBILLING_ALIAS:STATUS      = "B"
    ARSBILLING_ALIAS:BILLED_DATE = TODAYSDATE
    ARSBILLING_ALIAS:STATUS_DATE = TODAYSDATE
    ARSBILLING_ALIAS:PRINTED     = 1 -- can not update again
    L_UPDATE_CTR = L_UPDATE_CTR + 1
    Write ("%c%s%n",20001,"Records Updated ",L_UPDATE_CTR )
End
End

End -- end of procedure

Procedure CREATE_INSTALLMENT_CHARGE
Begin

L_TRANS_CODE = 18 -- installment charge trans code
L_BILLING_CTR = ARSBILLING:BILLING_CTR

Access ARSBILLING_ALIAS, Set ARSBILLING_ALIAS:COMPANY_ID = ARSBILLING:COMPANY_ID,
                             ARSBILLING_ALIAS:POLICY_NO  = ARSBILLING:POLICY_NO,
                             ARSBILLING_ALIAS:TRANS_DATE = ARSBILLING:TRANS_DATE,
                             ARSBILLING_ALIAS:TRANS_EFF  = ARSBILLING:TRANS_EFF,
                             ARSBILLING_ALIAS:TRANS_EXP  = ARSBILLING:TRANS_EXP,
                             ARSBILLING_ALIAS:TRANS_CODE = L_TRANS_CODE,
                             ARSBILLING_ALIAS:LINE_OF_BUSINESS = ARSBILLING:LINE_OF_BUSINESS,
                             ARSBILLING_ALIAS:COMM_RATE  = ARSBILLING:COMM_RATE,
                             ARSBILLING_ALIAS:SUB_CODE   = ARSBILLING:SUB_CODE,
                             ARSBILLING_ALIAS:BILLING_CTR = ARSBILLING:BILLING_CTR,
                             ARSBILLING_ALIAS:RETURN_CHECK_CTR = ARSBILLING:RETURN_CHECK_CTR

If ARSBILLING_ALIAS:COMPANY_ID <> ARSBILLING:COMPANY_ID Or
   ARSBILLING_ALIAS:POLICY_NO  <> ARSBILLING:POLICY_NO Or
   ARSBILLING_ALIAS:TRANS_DATE <> ARSBILLING:TRANS_DATE Or
   ARSBILLING_ALIAS:TRANS_EFF  <> ARSBILLING:TRANS_EFF Or
   ARSBILLING_ALIAS:TRANS_EXP  <> ARSBILLING:TRANS_EXP Or
   ARSBILLING_ALIAS:TRANS_CODE <> L_TRANS_CODE Or
   ARSBILLING_ALIAS:LINE_OF_BUSINESS <> ARSBILLING:LINE_OF_BUSINESS Or
   ARSBILLING_ALIAS:COMM_RATE  <> ARSBILLING:COMM_RATE Or
   ARSBILLING_ALIAS:SUB_CODE   <> ARSBILLING:SUB_CODE Or
   ARSBILLING_ALIAS:BILLING_CTR <> ARSBILLING:BILLING_CTR Or
   ARSBILLING_ALIAS:RETURN_CHECK_CTR <> ARSBILLING:RETURN_CHECK_CTR Then
   Begin
   Add ARSBILLING_ALIAS
   Begin
       ARSBILLING_ALIAS:COMPANY_ID              = ARSBILLING:COMPANY_ID
       ARSBILLING_ALIAS:POLICY_NO               = ARSBILLING:POLICY_NO
       ARSBILLING_ALIAS:TRANS_DATE              = TODAYSDATE
       ARSBILLING_ALIAS:TRANS_EFF               = ARSBILLING:TRANS_EFF
       ARSBILLING_ALIAS:TRANS_EXP               = ARSBILLING:TRANS_EXP
       ARSBILLING_ALIAS:TRANS_CODE              = L_TRANS_CODE
       ARSBILLING_ALIAS:LINE_OF_BUSINESS        = ARSBILLING:LINE_OF_BUSINESS
       ARSBILLING_ALIAS:COMM_RATE               = 0.00
       ARSBILLING_ALIAS:SUB_CODE                = ARSBILLING:SUB_CODE
       -- was arsbilling:billing_ctr + 1
       -- changed 02/11/2002 - dlp
--       ARSBILLING_ALIAS:BILLING_CTR             = ARSBILLING:BILLING_CTR
       ARSBILLING_ALIAS:BILLING_CTR             = L_BILLING_CTR
       ARSBILLING_ALIAS:RETURN_CHECK_CTR        = ARSBILLING:RETURN_CHECK_CTR
       ARSBILLING_ALIAS:AGENT_NO                = ARSBILLING:AGENT_NO
       ARSBILLING_ALIAS:BILLED_DATE             = TODAYSDATE
       ARSBILLING_ALIAS:DUE_DATE                = ARSBILLING:DUE_DATE
       ARSBILLING_ALIAS:INSTALLMENT_AMOUNT      = ARSPAYPLAN:INSTALLMENT_CHARGE_RATE
       ARSBILLING_ALIAS:STATUS                  = "B"
       ARSBILLING_ALIAS:STATUS_DATE             = TODAYSDATE
       ARSBILLING_ALIAS:TOTAL_AMOUNT_PAID       = 0.00
       ARSBILLING_ALIAS:BILL_PLAN               = ARSBILLING:BILL_PLAN
       ARSBILLING_ALIAS:PAYMENT_PLAN            = ARSBILLING:PAYMENT_PLAN
       ARSBILLING_ALIAS:INSTALLMENT_CHARGE      = 0
       ARSBILLING_ALIAS:USER_CONSOLE            = TERMINAL
       ARSBILLING_ALIAS:USER                    = USERNAME
       ARSBILLING_ALIAS:PRINTED                 = 1
       ARSBILLING_ALIAS:WRITE_OFF               = 0
       ARSBILLING_ALIAS:WRITE_OFF_AMOUNT        = 0
       ARSBILLING_ALIAS:WRITE_OFF_DATE          = 00.00.0000
End  -- end of adding to arsbilling_alias
End

L_TRANS_TYPE = "I"

Access ARSINVWORK_ALIAS,
   Set ARSINVWORK_ALIAS:COMPANY_ID = ARSBILLING_ALIAS:COMPANY_ID,
       ARSINVWORK_ALIAS:POLICY_NO  = ARSBILLING_ALIAS:POLICY_NO,
       ARSINVWORK_ALIAS:DUE_DATE   = ARSBILLING_ALIAS:DUE_DATE,
       ARSINVWORK_ALIAS:TRANS_TYPE = L_TRANS_TYPE,
       ARSINVWORK_ALIAS:PAYMENT_CTR = L_PAYMENT_CTR

If ARSINVWORK_ALIAS:COMPANY_ID <> ARSBILLING_ALIAS:COMPANY_ID Or
   ARSINVWORK_ALIAS:POLICY_NO  <> ARSBILLING_ALIAS:POLICY_NO Or
   ARSINVWORK_ALIAS:DUE_DATE   <> ARSBILLING_ALIAS:DUE_DATE Or
   ARSINVWORK_ALIAS:TRANS_TYPE <> L_TRANS_TYPE Or
   ARSINVWORK_ALIAS:PAYMENT_CTR <> L_PAYMENT_CTR Then
   Begin

/* add this record to the invoice work file */
   Add ARSINVWORK_ALIAS
   Begin
       ARSINVWORK_ALIAS:COMPANY_ID            = ARSBILLING_ALIAS:COMPANY_ID
       ARSINVWORK_ALIAS:POLICY_NO             = ARSBILLING_ALIAS:POLICY_NO
       ARSINVWORK_ALIAS:TRANS_TYPE            = L_TRANS_TYPE
       ARSINVWORK_ALIAS:PAYMENT_CTR           = L_PAYMENT_CTR
       ARSINVWORK_ALIAS:DUE_DATE              = ARSBILLING_ALIAS:DUE_DATE
       ARSINVWORK_ALIAS:STATUS                = ARSBILLING_ALIAS:STATUS
       ARSINVWORK_ALIAS:BILLED_DATE           = TODAYSDATE
       ARSINVWORK_ALIAS:EFF_DATE              = ARSBILLING_ALIAS:TRANS_EFF
       ARSINVWORK_ALIAS:EXP_DATE              = ARSBILLING_ALIAS:TRANS_EXP
       ARSINVWORK_ALIAS:TRANS_CODE            = ARSBILLING_ALIAS:TRANS_CODE
--       ARSINVWORK_ALIAS:BILLING_CTR           = ARSBILLING_ALIAS:BILLING_CTR
       ARSINVWORK_ALIAS:BILLING_CTR           = L_BILLING_CTR
       ARSINVWORK_ALIAS:INSTALLMENT_AMOUNT    = 0
       ARSINVWORK_ALIAS:INSTALLMENT_CHARGE    = ARSBILLING_ALIAS:INSTALLMENT_AMOUNT
       ARSINVWORK_ALIAS:TOTAL_AMOUNT_PAID     = ARSBILLING_ALIAS:TOTAL_AMOUNT_PAID
       ARSINVWORK_ALIAS:WRITE_OFF_AMOUNT      = ARSBILLING_ALIAS:WRITE_OFF_AMOUNT
       ARSINVWORK_ALIAS:NET_AMOUNT_DUE = ARSINVWORK_ALIAS:NET_AMOUNT_DUE +
       (ARSBILLING_ALIAS:INSTALLMENT_AMOUNT + ARSBILLING_ALIAS:INSTALLMENT_CHARGE -
       (ARSBILLING_ALIAS:TOTAL_AMOUNT_PAID  + ARSBILLING_ALIAS:WRITE_OFF_AMOUNT))
       ARSINVWORK_ALIAS:TOTAL_ANNUAL          = ARSBILLING_ALIAS:INSTALLMENT_AMOUNT
       ARSINVWORK_ALIAS:PAST_DUE              = "N"
       ARSINVWORK_ALIAS:PAYMENT_PLAN          = ARSBILLING_ALIAS:PAYMENT_PLAN
       ARSINVWORK_ALIAS:AGENT_NO              = ARSBILLING_ALIAS:AGENT_NO
       ARSINVWORK_ALIAS:LINE_OF_BUSINESS      = ARSBILLING_ALIAS:LINE_OF_BUSINESS
       ARSINVWORK_ALIAS:LOB_SUBLINE           = ARSBILLING_ALIAS:LOB_SUBLINE
       ARSINVWORK_ALIAS:COMM_RATE             = ARSBILLING_ALIAS:COMM_RATE
       ARSINVWORK_ALIAS:RETURN_CHECK_CTR      = ARSBILLING_ALIAS:RETURN_CHECK_CTR
   End -- end of adding to arsinvwork
   End
   Else
   Begin
   Change ARSINVWORK_ALIAS
   Begin
      ARSINVWORK_ALIAS:INSTALLMENT_AMOUNT = ARSINVWORK_ALIAS:INSTALLMENT_AMOUNT + 0
      ARSINVWORK_ALIAS:INSTALLMENT_CHARGE = ARSINVWORK_ALIAS:INSTALLMENT_CHARGE + ARSBILLING_ALIAS:INSTALLMENT_AMOUNT
      ARSINVWORK_ALIAS:NET_AMOUNT_DUE = ARSINVWORK_ALIAS:NET_AMOUNT_DUE +
      (ARSBILLING_ALIAS:INSTALLMENT_AMOUNT + ARSBILLING_ALIAS:INSTALLMENT_CHARGE -
      (ARSBILLING_ALIAS:TOTAL_AMOUNT_PAID  + ARSBILLING_ALIAS:WRITE_OFF_AMOUNT))
   End
   End

End

Procedure CHECK_FOR_UNDERWRITING_CX
Begin

L_UNDERWRITING_CX = "N"

Access SFSCANCEL, Set SFSCANCEL:COMPANY_ID = ARSBILLING:COMPANY_ID,
                      SFSCANCEL:POLICY_NO  = ARSBILLING:POLICY_NO, Approximate

While SFSCANCEL:COMPANY_ID = ARSBILLING:COMPANY_ID And
      SFSCANCEL:POLICY_NO  = ARSBILLING:POLICY_NO
      Begin
          If SFSCANCEL:STATUS not one of "CURRENT", "REINSTATED" -- Or
--            (SFSCANCEL:STATUS = "PENDING" And
--             SFSCANCEL:CANCELLATION_CODE  <> 000)
          Then
          { L_UNDERWRITING_CX = "Y" }
          Next SFSCANCEL
      End

Access SFPNAME, Set SFPNAME:POLICY_NO = ARSBILLING:POLICY_NO,
                    SFPNAME:POL_YEAR  = L_POL_YEAR,
                    SFPNAME:END_SEQUENCE = L_END_SEQUENCE

While SFPNAME:POLICY_NO = ARSBILLING:POLICY_NO And
      SFPNAME:POL_YEAR  = L_POL_YEAR And
      SFPNAME:END_SEQUENCE = L_END_SEQUENCE
      Begin
          If SFPNAME:STATUS <> "ACTIVE" Then
          Begin
              L_UNDERWRITING_CX = "Y"
          End
      Next SFPNAME
End  -- end of sfpname loop

End

Procedure CHECK_FOR_NON_PAY
Begin

L_NON_PAY_NOTICE = "N"

Access ARSCANCEL, Set ARSCANCEL:COMPANY_ID = ARSBILLING:COMPANY_ID,
                      ARSCANCEL:POLICY_NO  = ARSBILLING:POLICY_NO, Approximate

While ARSCANCEL:COMPANY_ID = ARSBILLING:COMPANY_ID And
      ARSCANCEL:POLICY_NO  = ARSBILLING:POLICY_NO
      Begin
          If ARSCANCEL:CX_STATUS One Of "P", "C" Then
          Begin
              L_NON_PAY_NOTICE = "Y"
          End
          Next ARSCANCEL
      End

End

Procedure GET_CURRENT_SFPNAME
Begin


--L_POL_YEAR     = Year(ARSINVWORK:EXP_DATE) - 1
--l_pol_year       = year(l_hold_exp_date) - 1
L_POLICY_NO      = ARSINVWORK:POLICY_NO
L_POL_YEAR       = Year(L_HOLD_EFF_DATE)

L_END_SEQUENCE = 0

If Year(ARSINVWORK:EXP_DATE) - Year(ARSINVWORK:EFF_DATE) > 1 Then
Begin
   Access SFPCURRENT, Set SFPCURRENT:POLICY_NO = ARSINVWORK:POLICY_NO
   L_POL_YEAR = SFPCURRENT:POL_YEAR
End

/* Access SFPNAME, Set SFPNAME:POLICY_NO = ARSINVWORK:POLICY_NO,
                    SFPNAME:POL_YEAR  = L_POL_YEAR, Approximate

While SFPNAME:POLICY_NO = ARSINVWORK:POLICY_NO And
      SFPNAME:POL_YEAR  = L_POL_YEAR
      Begin
          L_POLICY_NO    = SFPNAME:POLICY_NO
          L_END_SEQUENCE = SFPNAME:END_SEQUENCE
          Next SFPNAME
      End
*/
-- lets check to see if a valid name was found
--If L_POLICY_NO <> ARSINVWORK:POLICY_NO Or
--   L_POLICY_NO = 0 Then
--Begin
  -- bad name record, lets pick the last one on file
  Access SFPNAME, Set SFPNAME:POLICY_NO = ARSINVWORK:POLICY_NO, Approximate

  While SFPNAME:POLICY_NO = ARSINVWORK:POLICY_NO
  Begin
      L_POLICY_NO = SFPNAME:POLICY_NO
      L_POL_YEAR  = SFPNAME:POL_YEAR
      L_END_SEQUENCE = SFPNAME:END_SEQUENCE
      Next SFPNAME
  End

--End -- end of sfpname valid checking

End  -- end of get_current_sfpname procedure

Procedure GET_NUMBER_OF_COPIES
Begin

L_COPY_CTR = 2

If G_RUN_MODE = 1 Then -- invoice from customer service
Begin
   L_COPY_CTR = 1
End

Do GET_PAYOR_COPY

End  -- end of get_number_of_copies

Procedure GET_PAYOR_COPY
Begin

L_SFPNAME_LOOP_CTR = 0
L_PAYOR_FOUND = "N"

For L_CTR = 1 To 3
Begin
    L_PAYOR_NAME[L_CTR]    = ""
    L_PAYOR_ADDRESS[L_CTR] = ""
End

L_PAYOR_CITY           = ""
L_PAYOR_STATE          = ""
L_PAYOR_ZIPCODE        = ""
L_PAYOR_TYPE           = ""

Access SFPSUPP, Set SFPSUPP:POLICY_NO = L_POLICY_NO,
                    SFPSUPP:POL_YEAR  = L_POL_YEAR, Approximate

While SFPSUPP:POLICY_NO = L_POLICY_NO And
      SFPSUPP:POL_YEAR  = L_POL_YEAR And
      L_PAYOR_FOUND  <> "Y"
      Begin
      If SFPSUPP:END_SEQUENCE = L_END_SEQUENCE Then
      {
       If SFPSUPP:MORTGAGE_TYPE_1 One Of "B","C","F" Then
      Begin

      L_PAYOR_FOUND = "Y"
      L_PAYOR_TYPE = SFPSUPP:MORTGAGE_TYPE_1

      If SFPSUPP:MORTGAGE_ID = "" And
         SFPSUPP:NAME[1] <> "" Then
      Begin
         For L_CTR = 1 To 3
         Begin
            L_PAYOR_NAME[L_CTR]    = SFPSUPP:NAME[L_CTR]
            L_PAYOR_ADDRESS[L_CTR] = SFPSUPP:ADDRESS[L_CTR]
         End
         L_PAYOR_CITY              = SFPSUPP:CITY
         L_PAYOR_STATE             = SFPSUPP:STR_STATE
         L_PAYOR_ZIPCODE           = SFPSUPP:STR_ZIPCODE
      End  -- end of sfpsupp:mortgage_id = ""
      Else -- sfpsupp:mortgage_id <> ""
      Begin

      Access SFSMORT, Set SFSMORT:COMPANY_ID = L_HOLD_COMPANY_ID,
                          SFSMORT:MORTGAGE_ID = SFPSUPP:MORTGAGE_ID
      For L_CTR = 1 To 3
      Begin
         L_PAYOR_NAME[L_CTR]       = SFSMORT:NAME[L_CTR]
         L_PAYOR_ADDRESS[L_CTR]    = SFSMORT:ADDRESS[L_CTR]
      End
      L_PAYOR_CITY                 = SFSMORT:CITY
      L_PAYOR_STATE                = SFSMORT:STR_STATE
      L_PAYOR_ZIPCODE              = SFSMORT:STR_ZIPCODE
      End -- end of sfsmort hit
      End -- end of one of "B","C","F"
      }   -- end of end sequence hit

         Next SFPSUPP

      End -- end of policy number hit on sfpsupp

If L_PAYOR_FOUND <> "Y" Then
Begin
L_PAYOR_FOUND = "Y"
L_PAYOR_TYPE  = "I"

   Access SFPCURRENT, Set SFPCURRENT:POLICY_NO = L_POLICY_NO

   Access SFPNAME, Set SFPNAME:POLICY_NO = SFPCURRENT:POLICY_NO,
                       SFPNAME:POL_YEAR  = SFPCURRENT:POL_YEAR,
                       SFPNAME:END_SEQUENCE = SFPCURRENT:END_SEQUENCE

   For L_CTR = 1 To 3
   Begin
      L_PAYOR_NAME[L_CTR]         = SFPNAME:NAME[L_CTR]
      L_PAYOR_ADDRESS[L_CTR]      = SFPNAME:ADDRESS[L_CTR]
   End
   L_PAYOR_CITY                   = SFPNAME:CITY
   L_PAYOR_STATE                  = SFPNAME:STR_STATE
   L_PAYOR_ZIPCODE                = SFPNAME:STR_ZIPCODE

End

End

/* ***************************** */
Procedure GET_MORT_COPY
Begin

L_SFPNAME_LOOP_CTR = 0
L_MORT_FOUND = "N"

For L_CTR = 1 To 3
Begin
    L_MORT_NAME[L_CTR]    = ""
    L_MORT_ADDRESS[L_CTR] = ""
End

L_MORT_CITY           = ""
L_MORT_STATE          = ""
L_MORT_ZIPCODE        = ""
L_MORT_TYPE           = ""
L_MORT_TELEPHONE      = ""
L_MORT_ACCOUNT        = ""

Access SFPSUPP, Set SFPSUPP:POLICY_NO = L_POLICY_NO,
                    SFPSUPP:POL_YEAR  = L_POL_YEAR, Approximate

While SFPSUPP:POLICY_NO = L_POLICY_NO And
      SFPSUPP:POL_YEAR  = L_POL_YEAR And
      L_MORT_FOUND  <> "Y"
      Begin
      If SFPSUPP:END_SEQUENCE = L_END_SEQUENCE Then
      {
      If SFPSUPP:MORTGAGE_TYPE_1 One Of "B","C","F","M" Then
      Begin

      L_MORT_FOUND = "Y"
      L_MORT_TYPE = SFPSUPP:MORTGAGE_TYPE_1

      If SFPSUPP:MORTGAGE_ID = "" Then
      Begin
         For L_CTR = 1 To 3
         Begin
            L_MORT_NAME[L_CTR]    = SFPSUPP:NAME[L_CTR]
            L_MORT_ADDRESS[L_CTR] = SFPSUPP:ADDRESS[L_CTR]
         End
         L_MORT_CITY              = SFPSUPP:CITY
         L_MORT_STATE             = SFPSUPP:STR_STATE
         L_MORT_ZIPCODE           = SFPSUPP:STR_ZIPCODE
         L_MORT_TELEPHONE         = SFPSUPP:TELEPHONE[1]
      End  -- end of sfpsupp:mortgage_id = ""
      Else -- sfpsupp:mortgage_id <> ""
      Begin
      Access SFSMORT, Set SFSMORT:COMPANY_ID = L_HOLD_COMPANY_ID,
                          SFSMORT:MORTGAGE_ID = SFPSUPP:MORTGAGE_ID, Approximate
      For L_CTR = 1 To 3
      Begin
         L_MORT_NAME[L_CTR]       = SFSMORT:NAME[L_CTR]
         L_MORT_ADDRESS[L_CTR]    = SFSMORT:ADDRESS[L_CTR]
      End
      L_MORT_CITY                 = SFSMORT:CITY
      L_MORT_STATE                = SFSMORT:STR_STATE
      L_MORT_ZIPCODE              = SFSMORT:STR_ZIPCODE
      L_MORT_TELEPHONE            = SFSMORT:TELEPHONE[1]
      L_MORT_ACCOUNT              = SFPSUPP:ACCOUNT_NO

      End -- end of sfsmort hit
      End -- end of one of "B","C","F"
      }   -- end of end sequence hit

         Next SFPSUPP

      End -- end of policy number hit on sfpsupp


End

Procedure CHECK_FOR_MINIMUM_AMOUNTS
Begin

L_FIRST_TIME      = "Y"
L_HOLD_POLICY_NO  = 0
L_TOTAL_AMT_DUE   = 0.00
L_COMPANY         = ""
L_HOLD_COMPANY_ID = ""

Access ARSINVWORK, Set ARSINVWORK:COMPANY_ID = L_COMPANY, Approximate

While ARSINVWORK:COMPANY_ID <> "<0>"
Begin

    If L_FIRST_TIME = "Y" Then
    Begin
        L_FIRST_TIME = "N"
        L_HOLD_COMPANY_ID = ARSINVWORK:COMPANY_ID
        L_HOLD_POLICY_NO  = ARSINVWORK:POLICY_NO
    End

    If L_HOLD_COMPANY_ID <> ARSINVWORK:COMPANY_ID Then
    Begin
        If L_TOTAL_AMT_DUE <= ARSCONTROL:WAIVE_AMOUNT_CREDIT Or
           L_TOTAL_AMT_DUE <= ARSCONTROL:WAIVE_AMOUNT_DEBIT Or
           l_total_amt_due <= arscontrol:cancel_waive_amount or
-- this will prevent zero amount due invoices from printing
           L_TOTAL_AMT_DUE  = 0.00 Then
        Begin
           Do DELETE_ARSINVWORK
        End
        L_HOLD_COMPANY_ID  = ARSINVWORK:COMPANY_ID
        L_HOLD_POLICY_NO   = ARSINVWORK:POLICY_NO
        L_TOTAL_AMT_DUE    = 0.00
    End

    If L_HOLD_POLICY_NO <> ARSINVWORK:POLICY_NO Then
    Begin
        If L_TOTAL_AMT_DUE <= ARSCONTROL:CANCEL_WAIVE_AMOUNT Or
           L_TOTAL_AMT_DUE <= ARSCONTROL:WAIVE_AMOUNT_DEBIT  Or
           L_TOTAL_AMT_DUE  = 0.00 Then
        Begin
            Do DELETE_ARSINVWORK
        End
        L_HOLD_POLICY_NO = ARSINVWORK:POLICY_NO
        L_TOTAL_AMT_DUE  = 0.00
    End

    L_TOTAL_AMT_DUE = L_TOTAL_AMT_DUE + ARSINVWORK:NET_AMOUNT_DUE

    Next ARSINVWORK
    access arspayplan, set arspayplan:company_id       = arsinvwork:company_id,
                           arspayplan:line_of_business = arsinvwork:line_of_business,
                           arspayplan:payment_plan     = arsinvwork:payment_plan

    If (L_TOTAL_AMT_DUE <= ARSCONTROL:CANCEL_WAIVE_AMOUNT Or
        L_TOTAL_AMT_DUE <= ARSCONTROL:WAIVE_AMOUNT_DEBIT  Or
        L_TOTAL_AMT_DUE  = 0.00) and
        arsinvwork:billing_ctr <> arspayplan:number_of_payments Then
       Begin
          Do DELETE_ARSINVWORK
       End

End

End

Procedure DELETE_ARSINVWORK
Begin

Access ARSINVWORK_ALIAS, Set ARSINVWORK_ALIAS:COMPANY_ID = L_HOLD_COMPANY_ID,
                             ARSINVWORK_ALIAS:POLICY_NO  = L_HOLD_POLICY_NO, Approximate

While ARSINVWORK_ALIAS:COMPANY_ID = L_HOLD_COMPANY_ID And
      ARSINVWORK_ALIAS:POLICY_NO  = L_HOLD_POLICY_NO
      Begin
          Delete ARSINVWORK_ALIAS
          Next ARSINVWORK_ALIAS
      End
End

Procedure GET_TOTAL_ANNUAL
Begin

L_TOTAL_ANNUAL = 0
L_RECORD_CTR = 0

Access PRSMASTER, Set PRSMASTER:COMPANY_ID = ARSBILLING:COMPANY_ID,
                      PRSMASTER:POLICY_NO = ARSBILLING:POLICY_NO, Using First Index, Generic

While PRSMASTER:COMPANY_ID = ARSBILLING:COMPANY_ID And
      PRSMASTER:POLICY_NO  = ARSBILLING:POLICY_NO
Begin
    If --PRSMASTER:COMPANY_ID = ARSBILLING:COMPANY_ID And
      -- PRSMASTER:POLICY_NO  = ARSBILLING:POLICY_NO And
       (PRSMASTER:TRANS_DATE = ARSBILLING:TRANS_DATE And
        PRSMASTER:TRANS_EFF  = ARSBILLING:TRANS_EFF And
        PRSMASTER:TRANS_EXP  = ARSBILLING:TRANS_EXP And
        PRSMASTER:TRANS_CODE One Of 10,12,13,14,19) Then
       Begin
           L_TOTAL_ANNUAL = L_TOTAL_ANNUAL + PRSMASTER:PREMIUM
           L_RECORD_CTR = L_RECORD_CTR + 1
       End
       Next PRSMASTER
End

Access ARSBILLING_ALT, Set ARSBILLING_ALT:COMPANY_ID = ARSBILLING:COMPANY_ID,
                           ARSBILLING_ALT:POLICY_NO  = ARSBILLING:POLICY_NO, Approximate

L_TOTAL_ANNUAL = 0.00


While ARSBILLING_ALT:COMPANY_ID = ARSBILLING:COMPANY_ID And
      ARSBILLING_ALT:POLICY_NO  = ARSBILLING:POLICY_NO
      Begin
      If (ARSBILLING:BILLING_CTR One Of 1 And
          ARSBILLING_ALT:STATUS One Of "O","B" And
          ARSBILLING_ALT:TRANS_CODE One Of 10,12,13,14,19) Or
         (ARSBILLING:BILLING_CTR Not One Of 1 And
          ARSBILLING_ALT:STATUS One Of "O","B" And
          ARSBILLING_ALT:TRANS_CODE One Of 10,12,13,14,18,19,22,23,29) Then
      Begin
          L_TOTAL_ANNUAL = L_TOTAL_ANNUAL + (ARSBILLING_ALT:INSTALLMENT_AMOUNT
                                          -  ARSBILLING_ALT:TOTAL_AMOUNT_PAID )
      End
      Next ARSBILLING_ALT

      End

End

Procedure PROCESS_PAYMENTS_RECEIVED
Begin

   L_PRIOR_BILLING_DATE   = 00.00.0000
   L_CURRENT_BILLING_DATE = 00.00.0000

   Access ARSINVWORK, Set ARSINVWORK:COMPANY_ID = L_COMPANY,
                          ARSINVWORK:POLICY_NO  = G_POLICY_NO, Approximate

   While ARSINVWORK:COMPANY_ID = L_COMPANY And
         ARSINVWORK:POLICY_NO  = G_POLICY_NO
   Begin
        If L_CURRENT_BILLING_DATE = 00.00.0000 Then
        Begin
            L_CURRENT_BILLING_DATE = ARSINVWORK:BILLED_DATE
        End
        If L_CURRENT_BILLING_DATE > ARSINVWORK:BILLED_DATE  Then
        Begin
            L_CURRENT_BILLING_DATE = ARSINVWORK:BILLED_DATE
        End
        Next ARSINVWORK
   End

   Access ARSBILLING, Set ARSBILLING:COMPANY_ID = L_COMPANY,
                          ARSBILLING:POLICY_NO  = G_POLICY_NO, Approximate

   While ARSBILLING:COMPANY_ID = L_COMPANY And
         ARSBILLING:POLICY_NO  = G_POLICY_NO
         Begin
         If L_PRIOR_BILLING_DATE = 00.00.0000 And
            ARSBILLING:BILLED_DATE < L_CURRENT_BILLING_DATE Then
         Begin
              L_PRIOR_BILLING_DATE = ARSBILLING:BILLED_DATE
         End
         If ARSBILLING:TRANS_CODE One Of 10,12,13,14,16 And
            ARSBILLING:TOTAL_AMOUNT_PAID = 0.00 Then
         Begin
             L_SKIP_PAYMENT = "Y"
         End
         Else
         Begin
            L_SKIP_PAYMENT = "N"
         End
         Next ARSBILLING
   End

   Access ARSCHKSU, Set ARSCHKSU:POLICY_NO = G_POLICY_NO, Using Fourth Index, Approximate

L_PAYMENT_CTR = 0

   While ARSCHKSU:POLICY_NO = G_POLICY_NO
   Begin
   If ((ARSCHKSU:POSTED_DATE > L_PRIOR_BILLING_DATE And
       ARSCHKSU:POSTED_DATE <= L_CURRENT_BILLING_DATE) And
       ARSCHKSU:TRANS_EFF >= ARSBILLING:TRANS_EFF) And
       ARSBILLING:TRANS_CODE One Of 10 Then
      Begin
          L_PAYMENT_CTR = L_PAYMENT_CTR + 1
          Do UPDATE_ARSINVWORK_PAYMENTS
      End
      Next ARSCHKSU
   End

End -- end of procedure

Procedure UPDATE_ARSINVWORK_PAYMENTS
Begin

L_TRANS_TYPE = "P"

Access ARSINVWORK, Set ARSINVWORK:COMPANY_ID  = ARSCHKSU:COMPANY_ID,
                       ARSINVWORK:POLICY_NO   = ARSCHKSU:POLICY_NO,
                       ARSINVWORK:TRANS_TYPE  = L_TRANS_TYPE,
                       ARSINVWORK:DUE_DATE    = ARSCHKSU:POSTED_DATE,
                       ARSINVWORK:PAYMENT_CTR = L_PAYMENT_CTR, Approximate

If ARSINVWORK:COMPANY_ID  <> ARSCHKSU:COMPANY_ID Or
   ARSINVWORK:POLICY_NO   <> ARSCHKSU:POLICY_NO Or
   ARSINVWORK:TRANS_TYPE  <> L_TRANS_TYPE Or
   ARSINVWORK:DUE_DATE    <> ARSCHKSU:POSTED_DATE Or
   ARSINVWORK:PAYMENT_CTR <> L_PAYMENT_CTR Then
   Begin
   Add ARSINVWORK
   Begin
       ARSINVWORK:COMPANY_ID            = ARSCHKSU:COMPANY_ID
       ARSINVWORK:POLICY_NO             = ARSCHKSU:POLICY_NO
       ARSINVWORK:TRANS_TYPE            = L_TRANS_TYPE
       ARSINVWORK:DUE_DATE              = 12.31.9999
       ARSINVWORK:PAYMENT_CTR           = L_PAYMENT_CTR
       ARSINVWORK:STATUS                = "P"
       ARSINVWORK:BILLED_DATE           = ARSCHKSU:POSTED_DATE
       ARSINVWORK:INSTALLMENT_AMOUNT    = ARSCHKSU:CHECK_AMOUNT * -1
       ARSINVWORK:CHECK_NO              = ARSCHKSU:CHECK_NO
       ARSINVWORK:AGENT_NO              = ARSCHKSU:AGENT_NO
   End
   End

End

End
