%%
Screen
        Name = "Arsmt03b" ;
        Type = "Multiline" ;
        Highlite = Underscore;
        Screensize = "dynamic";
        Padcharacter = Space;
        Windowtitle="%a      %s Agent - Payee Information - Version 7.00      %m";
        Repeat line_item_tg, 14 times down;
        domain = "Arsbillingac_work" ;
        iconline = 0 ;

        Global String G_COMPANY[10],
                      G_COMPANY_ID[10];

        Global Unsigned Ascii Number G_CHECK_REFERENCE[7],
                                     g_key_check_reference[7],
                                     G_POLICY_NO[9],
                                     G_QUOTE_NO[8] ,
                                     G_AGENT_NO[4] ,
                                     g_offset[1] ;

        Global String G_SUPP_NAME[50],
                      G_CARE_OF[50],
                      g_bank_no[15] ,
                      G_STREET[30],
                      G_CITY_STATE[30],
                      G_CHECK_NUMBER[20];

        Global Signed Ascii Number G_TOTAL_DUE[9]/decimals=2,
                                   G_CHECK_AMOUNT[9]/decimals=2,
                                   g_balance[9]/dec=2,
                                   g_grace_days[2],
                                   g_apply_amount[9]/decimals=2 ;

        Global Unsigned Ascii Number G_ZIP_CODE[9] ,
                                     g_master_reference[7] ;

        global wdate g_starting_date,
                     g_ending_date,
                     g_post_date ;

        Signed Ascii Number L_AMOUNT[10]=0/decimals=2;
        Signed Ascii Number L_BALANCE[10]=0/decimals=2,
                            l_amt_paid[11]=0/decimals=2;
        Signed Ascii Number L_TOTAL_CHECKS[10]=0/decimals=2,
                            l_total_amount_due[10]=0/decimals=2 ;
        String L_ENTER[1],
               l_first[1],
               l_mouse[1]="N" ;
        String L_SFS[3]="SFS",
               l_already_added[1]="N",
               l_pol_zero[1]="N"  ;
        Wdate L_HOLD_CX_EFF_DATE;
        String L_POLICY_CX[1],
               l_post[1] ;
        String L_CANCELLATION_EXISTS[1];
        unsigned ascii number l_master_reference[7],
                              l_apply_to[1],
                              l_policy_no[9],
                              l_paid[11],
                              l_comm[6]/dec=2;

        signed ascii number l_total_due_agent[9]=0/decimals=2,
                            l_ac_net_amount_due[9]=0/dec=2 ;
        signed ascii number l_total_due_policy[9]=0/decimals=2;
        string l_continue_1[10]="",
               l_continue_2[10]="",
               l_continue_3[10]="",
               l_continue_4[10]="",
               l_continue_5[10]="",
               l_entry[1],
               l_got_it[1]="N" ;

        unsigned ascii number l_found[1]=0 ;
        signed ascii number l_total_applied[9]=0.00/decimals=2;
        Global unsigned ascii number g_starting_check_reference[9]=0/decimals=0,
                                     g_ending_check_reference[9]=0/decimals=0;

        Include "csexec.var"

        access arsbillingac_work, set arsbillingac_work:company_id = arschksu:company_id, approximate

        Include "STDKEYS7.INC"

functions

--        include "stdfunc7.inc"

        reaccess ;
        "redisplay" display/noreturn "arsmt03b" ;

        "CHANGE" sequence "chg"   tagged change_fn      ;
        "chg" change/hidden ;

        "offset" sequence "post" tagged update_fn ;
        "post" continue begin
                        if g_offset = 1 then
                           begin
                            g_company_id = arsbillingac_work:company_id
                            display modal screen "arsmt03d"
                            with initial function "reaccess"
                           end
                        end ;

        "update" sequence "check"  tagged update_fn ;
        "check" continue
                            {
                            if l_first = "Y" then
                              begin
                                g_balance = g_check_amount
                                l_first = "N"
                              end

--                            do check_cancel_and_agent
--                            if g_balance = 0 then
--                             begin
--                            l_continue_2 = dialog("Check Balance = 0","warning.bmp","Can't apply zero balance of check","Continue ")
--                             abort()
--                            end

                            l_continue_1 = dialog("Agent A/C APPLY Payment","warning.bmp","Are you sure you want to apply this check for payment? ","No","Yes")
                            if l_continue_1 = "Yes" then
                               begin
                                  --ask how much to apply
                                  g_apply_amount = 0
                                  display modal screen "arsmt03c"
                                  if g_apply_amount = 0 then
                                     begin
                                        g_apply_amount = arsbillingac_work:installment_amount
                                     end
                                  do update_arschksu
                                  if l_already_added = "Y" then
                                     begin
                                      l_continue_3 = dialog("Agent A/C APPLY Payment","warning.bmp","You already applied this check for payment of this line item? ","Continue")
                                      abort()
                                     end
                               end
                             l_amt_paid = g_balance - arsbillingac_work:installment_amount
--                             function = "redisplay"

                            } ;



toolbar definition
-- blank

screen entry
--write("%c%s%n",2001,"offset=",g_offset)
--pause(4000)
--disable(change_fn)
write("%c%s",16050,"                                              ")
if g_agent_no <> 0 then
 begin
  write("%c%s%n",18050,"Balance of Check Remaining = $",g_balance)
 end

access validation
if g_offset = 0 then
begin
 skip if arsbillingac_work:agent_no          <> g_agent_no
 skip if arsbillingac_work:due_date           > g_ending_date
 skip if arsbillingac_work:installment_amount = 0.00
 skip if arsbillingac_work:bill_plan          not one of "AC"
 skip if arsbillingac_work:total_amount_paid  <> 0
end
if g_offset = 1 then
begin
 skip if arsbillingac_work:agent_no          <> g_agent_no
 skip if arsbillingac_work:due_date           > g_ending_date
 skip if arsbillingac_work:installment_amount = 0.00
 skip if arsbillingac_work:bill_plan          not one of "AC"
 skip if arsbillingac_work:total_amount_paid  <> 0

end



Screen
{

%%

 Policy No              Insured               Billed       Paid     Write Off  Amount Due
 _________ ______________________________ ___________ ___________ ___________ ___________














%%

Components

Fields

/* beginning of the multiline screen */
301    begin
        if function one of "ADD", "NEW" then
           begin
             if g_agent_no = 0 then
                 begin
                   arsbillingac_work:policy_no = 0
                 end
           end
       end
        arsbillingac_work:POLICY_NO/displayonly tagged line_item_tg
        properties {
                   cursorshape     = hand
                   backgroundcolor = "white"
                   foregroundcolor = "blue"
                   }
       events     {
                  MouseClicked {
                  Currentrecord = EVENT.LINE
                  if g_offset = 1 then
                   begin
                     function = "offset"
                   end
                  if g_offset = 0 then
                   begin
                     function = "update"
                   end
                  Abort()
                  }
                  };
302    sfpname:NAME[1]/displayonly tagged line_item_tg
        properties {
                   foregroundcolor = "black"
                   backgroundcolor = "white"
                   } ;

303    arsbillingac_work:installment_amount/displayonly tagged line_item_tg
        properties {
                   foregroundcolor = "black"
                   backgroundcolor = "white"
                   } ;
304    arsbillingac_work:total_amount_paid/displayonly tagged line_item_tg
       properties {
                   foregroundcolor = "black"
                   backgroundcolor = "white"
                   } ;
305   arsbillingac_work:write_off_amount/displayonly tagged line_item_tg
        properties {
                   foregroundcolor = "black"
                   backgroundcolor = "white"
                   } ;

306    begin
        if arsbillingac_work:agent_no           = g_agent_no and
--            arsbillingac_work:status             one of "B" and
--            arsbillingac_work:due_date           >= g_starting_date and
            arsbillingac_work:due_date           <= g_ending_date  and
            arsbillingac_work:due_date           <> 00.00.0000 and
            arsbillingac_work:installment_amount <> 0.00 and
            arsbillingac_work:bill_plan          one of "AC" then
              begin
              l_ac_net_amount_due = arsbillingac_work:installment_amount
              l_total_amount_due = l_total_amount_due + arsbillingac_work:premium

              end
        else
              l_ac_net_amount_due = 0
        end
        arsbillingac_work:installment_amount/displayonly tagged line_item_tg
        properties {
                   foregroundcolor = "black"
                   backgroundcolor = "white"
                   } ;

--305    l_post/button/displayonly tagged line_item_tg
--         properties {
--                     icon = "detail.bmp"
--                    tooltip ="POST"
--                     cursorshape = hand
--                    }
--         events {
--         Mouseclicked {
--                     function = "update"
--                     abort()
--                    }
--                }
--         hide if l_apply_to = 0 ;

--1401     begin
--         if l_first = "Y" then
--           begin
--            g_balance = g_check_amount
--            l_first = "N"
--           end

--         end
--         g_balance/displayonly ;

/* beginning of the multiline screen */
/*


1403    Begin
        If FUNCTION one of "ADD", "NEW", "APPEND" then
            Begin
            do check_policy_balance
            ARSCHKSU:CHECK_AMOUNT = l_total_due_policy
            ARSCHKSU:BALANCE      = ARSCHKSU:CHECK_AMOUNT
            End
        End
        ARSCHKSU:CHECK_AMOUNT/default tagged line_item_tg;

*/

}

--}


Screen Exit

Procedure Definition

Procedure UPDATE_CSEXEC_master
Begin
    I_CSEXEC_APPLICATION="CHECK_MASTER"/spacefill
    Include "sfscsexec.pro"
End

Procedure UPDATE_CSEXEC
Begin
    I_CSEXEC_APPLICATION="CHECK_REFERENCE"/spacefill
    include "sfscsexec.pro"
End

procedure check_cancel_and_agent
begin
  If arsbillingac_work:POLICY_NO <> 0 Then
      Begin
       Access SFPCURRENT, Set SFPCURRENT:POLICY_NO = arsbillingac_work:POLICY_NO

       Access SFPNAME, Set SFPNAME:POLICY_NO    = arsbillingac_work:POLICY_NO,
                           SFPNAME:POL_YEAR     = SFPCURRENT:POL_YEAR,
                           SFPNAME:END_SEQUENCE = SFPCURRENT:END_SEQUENCE

       If SFPNAME:AGENT_NO <> arsbillingac_work:AGENT_NO Then
                Error 5002
      End

  If arsbillingac_work:POLICY_NO <> 0 Then
      Begin
        Do CHECK_FOR_CANCELLATION
        Error "Policy Has Been Cancelled" If L_CANCELLATION_EXISTS = "Y" Or
        L_POLICY_CX = "Y"
      End
end

procedure update_arschksu
begin

if l_total_amount_due = g_check_amount then
   begin
     l_continue_4 = dialog("Agent A/C Balance","warning.bmp","Check ready for posting. "+str(l_total_amount_due,"$Z,ZZZ,ZZZ.99-")+" ","Continue ")
       g_balance = 0.00
   end

--if g_apply_amount > g_balance then
--   begin
--     l_continue_5 = dialog("Agent A/C Balance","warning.bmp","Available Check balance is less then amount due. "+str(g_balance,"$Z,ZZZ,ZZZ.99-")+" ","Continue ")
--   end
--write("%c%s%n",2001,"l ac net amountdue=",l_ac_net_amount_due)
--pause(2000)
--if l_ac_net_amount_due <> g_check_amount then
--   begin

   -- to catch the first records that was added by the previous screen policy = 0
     access arschksu, set arschksu:company_id = g_company_id,
                          arschksu:check_reference = g_check_reference, exact

     l_already_added = "N"
     L_pol_zero = "N"
     if arschksu:company_id = g_company_id and
        arschksu:check_reference = g_check_reference then
          begin

            if arschksu:policy_no = 0 then
              begin
                change arschksu
                 begin
                  l_pol_zero = "Y"
                  arschksu:policy_no      = arsbillingac_work:policy_no
                  ARSCHKSU:QUOTE_NO       = G_QUOTE_NO
                  arschksu:pol_year       =  arsbillingac_work:pol_year
                  arschksu:trans_eff      = arsbillingac_work:trans_eff
                  arschksu:check_no       = g_check_number    -- arsbillingac_work:check_no
                  arschksu:check_amount   = g_apply_amount --arsbillingac_work:installment_amount
                  arschksu:balance        = g_apply_amount
                  g_balance               = g_check_amount - arschksu:check_amount -- arsbillingac_work:installment_amount
--                  if g_apply_amount > g_balance then
--                     begin
--                     write("%c%s",2050,"iam here")
--                        ARSCHKSU:BALANCE  = 0
--                     end
                  if g_balance < 0 then
                     begin
                        g_balance = 0
                     end
                    write("%c%s",16050,"                                            ")
                    if g_agent_no <> 0 then
                     begin
                      write("%c%s%n",16050,"Balance of Check Remaining = $",g_balance)
                     end
                 end    -- end of change
              end  -- end of pol = 0

          end -- end of company_id and check reference

     if l_pol_zero <> "Y" then
     begin
        access arschksu, set arschksu:policy_no = arsbillingac_work:policy_no, generic
        while arschksu:policy_no = arsbillingac_work:policy_no
       begin
         if arschksu:posted_date = 00.00.0000 and
            arschksu:check_amount = arsbillingac_work:installment_amount then
           begin
             L_already_added = "Y"
           end
       next arschksu
       end

     if l_already_added = "N" then
       BEGIN
         add arschksu
           begin
            ARSCHKSU:COMPANY_ID      = G_COMPANY_ID
            arschksu:policy_no       = arsbillingac_work:policy_no
            arschksu:pol_year        = arsbillingac_work:pol_year
            arschksu:trans_eff       = arsbillingac_work:trans_eff
            arschksu:check_amount    = g_apply_amount   -- arsbillingac_work:installment_amount
            arschksu:balance         = g_apply_amount
            arschksu:agent_no        = arsbillingac_work:agent_no
            ARSCHKSU:USER_CONSOLE    = CONSOLE
            ARSCHKSU:ENTER_TIME      = SYSTEMTIME
            ARSCHKSU:ENTER_DATE      = g_ending_date
            ARSCHKSU:COMMENTS        = "Paid with Agent Check"
            ARSCHKSU:PAYOR_TYPE      = "A" -- Agent
            ARSCHKSU:DISPOSITION     = "OPEN"
            ARSCHKSU:DEPOSIT_DATE    = 00.00.0000
            ARSCHKSU:USER            = USERNAME
            ARSCHKSU:PAYOR_NAME      = SFSAGENT:NAME[1]
            ARSCHKSU:PAYOR_CARE_OF   = SFSAGENT:NAME[2]
            ARSCHKSU:PAYOR_ADDRESS   = SFSAGENT:ADDRESS[1]
            ARSCHKSU:PAYOR_CITY      = SFSAGENT:CITY
            ARSCHKSU:PAYOR_STR_STATE = SFSAGENT:STR_STATE
            ARSCHKSU:PAYOR_ZIPCODE   = SFSAGENT:ZIPCODE
            arschksu:check_no        = arsbillingac_work:check_no
            ARSCHKSU:CHECK_DATE      = TODAYSDATE
            arschksu:check_no        = g_check_number
            ARSCHKSU:TRANS_DATE      = TODAYSDATE
            ARSCHKSU:BANK_NO         = g_bank_no
            ARSCHKSU:QUOTE_NO        = G_QUOTE_NO

            if g_master_reference = 0 then
               begin
                  do update_csexec_master
                  g_master_reference = i_csexec_number + 1
                  do add_check_master
               end
            Do UPDATE_CSEXEC

            ARSCHKSU:CHECK_REFERENCE = I_CSEXEC_NUMBER
            g_balance                = g_balance - arschksu:check_amount  -- arsbillingac_work:installment_amount
            L_BALANCE                = l_balance - arschksu:check_amount
--            if g_apply_amount < g_balance then
  --             begin
    --             ARSCHKSU:BALANCE         = 0
      --         end
        --    else
          --     begin
            --     arschksu:balance  = g_apply_amount - arschksu:check_amount
              -- end
          end  -- end of add
          write("%c%s",16050,"                                           ")
          write("%c%s%n",16050,"Balance of Check Remaining = $",g_balance)

        end  -- end of add
      END
  -- end
--end
end

Procedure CHECK_FOR_CANCELLATION
Begin
L_CANCELLATION_EXISTS = "N"
L_HOLD_CX_EFF_DATE = 00.00.0000

Access ARSCANCEL, Set ARSCANCEL:COMPANY_ID = ARSCHKSU:COMPANY_ID,
                      ARSCANCEL:POLICY_NO  = ARSCHKSU:POLICY_NO, Approximate

While ARSCANCEL:COMPANY_ID = ARSCHKSU:COMPANY_ID And
      ARSCANCEL:POLICY_NO  = ARSCHKSU:POLICY_NO
        Begin
        If ARSCANCEL:CX_EFF_DATE <= TODAYSDATE - ARSCONTROL:NON_PAY_GRACE_DAYS And
           ARSCANCEL:CX_STATUS <> "R" And
           L_CANCELLATION_EXISTS <> "Y" Then
            Begin
            L_CANCELLATION_EXISTS = "Y"
            L_HOLD_CX_EFF_DATE = ARSCANCEL:CX_EFF_DATE
            -- do not add notes here, this is done later so that check info can be added too
            --      Do CREATE_NOTES
            End

        Next ARSCANCEL
        End

-- checking for cancellations from sfpname
L_POLICY_CX = "N"

Access SFPNAME, Set SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO, Approximate

While SFPNAME:POLICY_NO = ARSCHKSU:POLICY_NO
    Begin
    If L_POLICY_CX = "N" And
       SFPNAME:STATUS = "CANCELLED" Then
        Begin
        L_POLICY_CX = "Y"
        End
    Else
    If L_POLICY_CX = "Y" And
       SFPNAME:STATUS = "CURRENT" Then
        Begin
        L_POLICY_CX = "N"
        End

    Next SFPNAME
    End

End



procedure add_check_master
begin
access arschkmstr, set  arschkmstr:company_id       = arschksu:company_id,
                        arschkmstr:master_reference = g_master_reference

if arschkmstr:company_id       <> arschksu:company_id or
   arschkmstr:master_reference <> l_master_reference then
   begin
    add arschkmstr
        begin
        arschkmstr:record           = arschksu:record/raw
        arschkmstr:master_reference = g_master_reference
        arschkmstr:check_amount     = l_amount
        end
    end

end


procedure check_agent_balance
begin
l_total_due_agent = 0.00

access arsbillingac_work_alias, set arsbillingac_work_alias:company_id = arschksu:company_id, approximate

while arsbillingac_work_alias:company_id = arschksu:company_id
    begin
    if (arsbillingac_work_alias:agent_no           = arschksu:agent_no and
       arsbillingac_work_alias:status             one of "B" and
       arsbillingac_work_alias:due_date           >= g_starting_date and
       arsbillingac_work_alias:due_date           <= g_ending_date  and
       arsbillingac_work_alias:installment_amount <> 0.00 and
       arsbillingac_work_alias:bill_plan          one of "AC") and
       l_got_it = "N" then
        begin
        l_total_due_agent = l_total_due_agent + (arsbillingac_work:installment_amount -
                            (arsbillingac_work:write_off_amount + arsbillingac_work:total_amount_paid))
          l_policy_no = arsbillingac_work_alias:policy_no
          l_got_it = "Y"

        end
     if (arsbillingac_work:agent_no           = arschksu:agent_no and
       arsbillingac_work:status             one of "P" and
       arsbillingac_work:trans_code         one of 13 and
       arsbillingac_work:due_date           >= g_starting_date and
       arsbillingac_work:due_date           <= g_ending_date  and
       arsbillingac_work:installment_amount <> 0.00 and
       arsbillingac_work:bill_plan          one of "AC") then
        begin
       l_total_due_agent = l_total_due_agent + arsbillingac_work:installment_amount
        end

    next arsbillingac_work_alias
    end

end

/*
procedure check_policy_balance
begin
l_total_due_policy = 0.00

access arsbillingac_work, set arsbillingac_work:company_id = arschksu:company_id, approximate

while arsbillingac_work:company_id = arschksu:company_id
    begin
    if arsbillingac_work:agent_no           = arschksu:agent_no and
       arsbillingac_work:status             one of "B" and
       arsbillingac_work:due_date           >= g_starting_date and
       arsbillingac_work:due_date           <= g_ending_date  and
       arsbillingac_work:installment_amount <> 0.00 and
       arsbillingac_work:bill_plan          one of "AC" and
       arsbillingac_work:policy_no          = arschksu:policy_no then
        begin
        l_total_due_policy = l_total_due_policy + (arsbillingac_work:installment_amount -
                             (arsbillingac_work:write_off_amount + arsbillingac_work:total_amount_paid))
        end

    next arsbillingac_work
    end

end


procedure pay_total_due_ac
begin
l_total_applied            = 0.00
g_starting_check_reference = 0
g_ending_check_reference   = 0

access arsbillingac_work, set arsbillingac_work:company_id = arschksu:company_id, approximate

while arsbillingac_work:company_id = arschksu:company_id
    begin
    if arsbillingac_work:agent_no           = arschksu:agent_no and
       arsbillingac_work:status             one of "B" and
       arsbillingac_work:due_date           >= g_starting_date and
       arsbillingac_work:due_date           <= g_ending_date and
       arsbillingac_work:installment_amount <> 0.00 and
       arsbillingac_work:bill_plan          one of "AC" then
--     l_total_applied               <= l_total_due_agent then
        begin
        -- step 1 - get arschksu check_reference
        access arschksu_alias, set arschksu_alias:policy_no = arsbillingac_work:policy_no, using fourth index, generic

        l_found = 0
        while arschksu_alias:policy_no = arsbillingac_work:policy_no
            begin
            if arschksu_alias:agent_no   = arsbillingac_work:agent_no and
               arschksu_alias:trans_date = arschksu:trans_date then
                begin
                l_found = 1
                i_csexec_number = arschksu_alias:check_reference
                end

            next arschksu_alias
            end

        if l_found = 0 then
            do update_csexec

        if g_starting_check_reference = 0 then
            begin
            g_starting_check_reference = i_csexec_number
            end

        g_ending_check_reference = i_csexec_number
        access arschksu_alias, set arschksu_alias:company_id      = arschksu:company_id,
                                   arschksu_alias:check_reference = i_csexec_number, exact

        if arschksu_alias:company_id      <> arschksu:company_id or
           arschksu_alias:check_reference <> i_csexec_number then
            add arschksu_alias
                begin
                -- do the record to record to capture what already exists
                arschksu_alias:record          = arschksu:record/raw
                ARSCHKSU_alias:COMPANY_ID      = arschksu:company_id
                arschksu_alias:check_reference = i_csexec_number
                arschksu_alias:policy_no       = arsbillingac_work:policy_no
                arschksu_alias:agent_no        = arsbillingac_work:agent_no
                arschksu_alias:bank_no         = arschksu:bank_no
                arschksu_alias:check_no        = arschksu:check_no
                arschksu_alias:trans_date      = todaysdate
                arschksu_alias:posted_date     = 00.00.0000
                arschksu_alias:post_dated      = ""
                arschksu_alias:comments        = "Automatic AC Payment"
                ARSCHKSU_alias:USER_CONSOLE    = CONSOLE
                ARSCHKSU_alias:ENTER_TIME      = SYSTEMTIME
                ARSCHKSU_alias:ENTER_DATE      = SYSTEMDATE
                ARSCHKSU_alias:PAYOR_TYPE      = "A" -- Agent
                ARSCHKSU_alias:DISPOSITION     = "OPEN"
                ARSCHKSU_alias:DEPOSIT_DATE    = 00.00.0000
                ARSCHKSU_alias:USER            = USERNAME
                ARSCHKSU_alias:TRANS_EFF       = arsbillingac_work:trans_DATE
                arschksu_alias:ac_payment      = 1

                do update_csexec_master

                l_master_reference             = i_csexec_number + 1

                do add_check_master

                arschksu_alias:check_amount    = (arsbillingac_work:installment_amount
                                                 - (arsbillingac_work:total_amount_paid
                                                 + arsbillingac_work:write_off_amount))
                l_total_applied                = l_total_applied +
                                                 arschksu_alias:check_amount
                arschksu_alias:balance         = arschksu_alias:check_amount
                end
        else
            change arschksu_alias
                begin
                arschksu_alias:check_amount    = (arschksu_alias:check_amount +
                                                 (arsbillingac_work:installment_amount
                                                 - (arsbillingac_work:total_amount_paid
                                                 + arsbillingac_work:write_off_amount)))
                l_total_applied                = l_total_applied +
                                                 arschksu_alias:check_amount
                arschksu_alias:balance         = arschksu_alias:check_amount
                end

        end

    next arsbillingac_work
    end

end
*/
End
